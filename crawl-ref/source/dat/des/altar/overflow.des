###############################################################################
# overflow.des: This is the place where vaults containing overflow altars go.
#
# Altar vaults do not just provide flavour. They are crucial for ensuring
# that granted gods without altars in the Temple will be present in the
# early part of the dungeon. Such altars are called "overflow temples".
# Sometimes, ordinary altar maps featuring a single C glyph (random altar)
# are used. However, there are also vaults dedicated to a special god.
# These look much more interesting, of course.
# There are two TAGs to be used for single-altar maps with a specified god:
#
# TAG: temple_overflow_1 temple_overflow_FOO
#      Says the map will only ever be used for overflow temples to god FOO.
#      (The 1 indicates there's only one god placed by this vault.)
# TAG: uniq_altar_FOO
#      If you also add this, then the map can be placed randomly even if
#      that altar has been chosen at new-game time to be an overflow temple
#      on a specific level. If it happens to be randomly placed before being
#      generated specifically then it will only be placed once, rather than
#      being placed a second time at the location chosen at new-game time.
#
# And there is a TAG if you want a single-altar map to a random god:
#
# TAG: temple_overflow_generic_1
#      Allows any of the overflow temple altars to be used.
#      For this, use one B glyph in your map.
#
# If you want to check overflow temple placement in wizard mode, use the &:
# command. The levels overflow temples are placed on, and which gods are
# in them, are chosen at new-game time.
#
###############################################################################

{{
function interest_check(e)
  if not you.in_branch("D") or you.absdepth() > 9 then
    e.tags('extra')
  end
end

function get_overflow_altar_count(e)
  local params = dgn.map_parameters()
  if params ~= nil then
    local tag = unpack(params)
    if tag ~= nil then
      -- temple_overflow_generic_ is 24 characters
      return string.sub(tag, 25)
    end
  end

  return nil
end

function altar_check(e)
  if e.is_validating() then
    e.subst('C = B')
    return
  end
  if get_overflow_altar_count(e) ~= nil then
    e.subst('C = B')
  else
    e.tags('extra')
  end
end

function callback.vampire_church_blood(data, triggerable, triggerer, marker, ev)
  local slaves = dgn.find_marker_positions_by_prop("slave_name", "vampire_church_blood")
  crawl.god_speaks("Kikubaaqudgha", "As you approach the altar, the fountains"
                                 .. " begin to flow with blood!")
  for i, slave in ipairs(slaves) do
    dgn.terrain_changed(slave.x, slave.y, "fountain_blood", false)
  end
end

function callback.hep_ancestral_shrine_los(data, triggerable, triggerer, marker, ev)
  if not dgn.persist.hep_ancestral_shrine_reborn and you.god() == "Hepliaklqana" then
    local trees = dgn.find_marker_positions_by_prop("dead_tree", 1)
    for i, slave in ipairs(trees) do
      dgn.tile_feat_changed(slave.x, slave.y, "DNGN_TREE")
    end
    dgn.reset_feature_name_for(trees[1].x, trees[1].y, "tree")
    local slime = dgn.find_marker_positions_by_prop("green_water", 1)
    for i, slave in ipairs(slime) do
      dgn.colour_at(slave.x, slave.y, "blue")
    end
    crawl.god_speaks("Hepliaklqana", "Let the past return from memory!")
    dgn.persist.hep_ancestral_shrine_reborn = true
  end
end

function callback.xom_greatest_gift(data, triggerable, triggerer, marker, ev)
  if not dgn.persist.xom_gg_heard and you.god() == "Xom" then
    dgn.persist.xom_gg_heard = true
    dgn.persist.xom_gg_granted = true
  elseif not dgn.persist.xom_gg_heard and you.god() ~= "Xom" then
    crawl.god_speaks("Xom", '"WORSHIP ME, MORTAL," Xom booms, "AND I SHALL'
                            .. ' GRANT YOU THE GREATEST GIFT OF ALL."')
    dgn.persist.xom_gg_heard = true
  elseif not dgn.persist.xom_gg_granted and you.god() == "Xom" then
    local pos = dgn.find_marker_positions_by_prop("gift", "altar")
    dgn.create_monster(pos[1].x, pos[1].y, "generate_awake att:good_neutral goblin")
    crawl.god_speaks("Xom", 'A goblin pops into existence! It looks at you'
                     .. ' with admiration.')
    crawl.god_speaks("Xom", '"Friendship. The greatest gift is friendship!"')

    dgn.persist.xom_gg_granted = true
  end
end

function species_mock(e)
  if you.race() == "Barachi" then
    e.kmons("1 = bullfrog")
  elseif you.race() == "Centaur" then
    e.kmons("1 = dart slug")
  elseif you.race() == "Demigod" then
    e.kmons("1 = titan simulacrum")
  elseif you.race() == "Demonspawn" then
    e.kmons("1 = hell beast")
  elseif you.race():find("Draconian") then
    e.kmons("1 = wyvern")
  elseif you.race() == "Deep Dwarf" then
    e.kmons("1 = deep dwarf zombie")
  elseif you.race() == "Deep Elf" then
    e.kmons("1 = insubstantial wisp")
  elseif you.race() == "Halfling" then
    e.kmons("1 = hobgoblin ; mundane hunting sling")
  elseif you.race() == "High Elf" then
    e.kmons("1 = glowing orange brain")
  elseif you.race() == "Hill Orc" then
    e.kmons("1 = goblin ; mundane hand axe . mundane ring mail")
  elseif you.race() == "Human" then
    e.kmons("1 = killer klown")
  elseif you.race() == "Felid" then
    e.kmons("1 = sphinx zombie")
  elseif you.race() == "Formicid" then
    e.kmons("1 = soldier ant")
  elseif you.race() == "Gargoyle" then
    e.kmons("1 = earth elemental")
  elseif you.race() == "Ghoul" then
    e.kmons("1 = death ooze")
  elseif you.race() == "Kobold" then
    e.kmons("1 = boggart")
  elseif you.race() == "Merfolk" then
    e.kmons("1 = bullfrog")
  elseif you.race() == "Minotaur" then
    e.kmons("1 = yak")
  elseif you.race() == "Mummy" then
    e.kmons("1 = human zombie")
  elseif you.race() == "Naga" then
    e.kmons("1 = torpor snail")
  elseif you.race() == "Octopode" then
    e.kmons("1 = tentacled monstrosity")
  elseif you.race() == "Ogre" then
    e.kmons("1 = ettin skeleton")
  elseif you.race() == "Spriggan" then
    e.kmons("1 = unseen horror")
  elseif you.race() == "Tengu" then
    e.kmons("1 = caustic shrike")
  elseif you.race() == "Troll" then
    e.kmons("1 = hungry ghost")
  elseif you.race() == "Vampire" then
    e.kmons("1 = tyrant leech")
  elseif you.race() == "Vine Stalker" then
    e.kmons("1 = thorn hunter")
  else
    e.kmons("1 = spectral ugly thing")
  end
end
}}

default-depth: D, Depths

# These must feature one of the temple_overflow_* TAGs (see header).
# Altars are sorted alphabetically by god, with the Shining One coming
# after Zin. At the end, there are altar vaults which can be used for
# more than just one god.

### Ashenzari overflow altars #################################################

NAME:   ashenzari_altar_1
TAGS:   uniq_altar_ashenzari temple_overflow_1 temple_overflow_ashenzari
TAGS:   transparent decor
KFEAT:  _ = altar_ashenzari
: interest_check(_G)
MAP
b@b
@_@
b@b
ENDMAP

# A ruined temple
NAME:   evilmike_ruin_ashenzari
TAGS:   uniq_altar_ashenzari temple_overflow_1 temple_overflow_ashenzari
TAGS:   transparent decor
SUBST:  x = xxxxx-, - = ----.
TILE:   x = WALL_BRICK_VINES
FTILE:  -V_ = FLOOR_SANDSTONE
KFEAT:  _ = altar_ashenzari
SUBST:  - = .
: interest_check(_G)
MAP
      .......
      .xx+xx.
     ..x---x..
   ....x---x....
   .xxxx---xxxx.
  ..xV-xx+xx-Vx..
....x---------x....
.xxxxx-------xxxxx.
.x---x-------x---x.
.x---+---_---+---x.
.x---x-------x---x.
.xxxxx-------xxxxx.
....x---------x....
  ..xV-xx+xx-Vx..
   .xxxx---xxxx.
   ....x---x....
     ..x---x..
      .xxxxx.
      .......
ENDMAP

NAME:   ashenzari_conservatory_becter
TAGS:   temple_overflow_1 temple_overflow_ashenzari transparent
DEPTH:  D:2-9
KFEAT:  _ = altar_ashenzari
MAP
   .....
 .........
 .........
....mmm....
....m_m....
....c+c....
xxxxx.xxxxx
     @
ENDMAP

NAME:  cheibrodos_ashenzari_chains
TAGS:  temple_overflow_1
TAGS:  temple_overflow_ashenzari uniq_altar_ashenzari transparent
DEPTH: D:3-9
KFEAT: _ = altar_ashenzari
KFEAT: m = iron_grate
MAP
.............
.mmm.....mmm.
.mcmmc_cmmcm.
.mmm.....mmm.
.............
ENDMAP

NAME: nicolae_ashenzari_panopticon
TAGS: uniq_altar_ashenzari temple_overflow_1 temple_overflow_ashenzari \
      transparent decor
SHUFFLE: ABCDEF/abcdef
SUBST: ACEbdf = x, Ba = m, Dc = ., Fe = @
NSUBST: m = + / m
KFEAT: _ = altar_ashenzari
MAP
E....F..E..F...CE
CC...D..C..D..CC.
.CC..DD.C.DD.CC..
..CC..D.C.D.CC...
...CC.DDCDDCC....
FDD.CC.DCDCC..DDF
..DDDCABABA.DDD..
....DDB...BDD....
ECCCCCA._.ACCCCCE
....DDB...BDD....
..DDD.ABABACDDD..
FDD..CCDCD.CC.DDF
....CCDDCDD.CC...
...CC.D.C.D..CC..
..CC.DD.C.DD..CC.
.CC..D..C..D...CC
EC...F..E..F....E
ENDMAP

### Cheibriados overflow altars ###############################################

NAME:   cheibriados_altar_1
TAGS:   uniq_altar_cheibriados temple_overflow_1 temple_overflow_cheibriados
TAGS:   transparent decor
KFEAT:  _ = altar_cheibriados
: interest_check(_G)
MAP
...
._.
...
ENDMAP

NAME:    cheibriados_altar_2
TAGS:    uniq_altar_cheibriados temple_overflow_1 temple_overflow_cheibriados
TAGS:    transparent decor
DEPTH:   D:2-
WEIGHT:  1
KPROP:   1 = no_tele_into
KFEAT:   _ = altar_cheibriados
MONS:    torpor snail
SUBST:   1 : 1:50 2:30 3:10 4:10
NSUBST:  4 = 1:1 / 1:2 / 1:3
: interest_check(_G)
MAP
.......
.mmm...
.m1m...
.mmmmm.
.._m1m.
.mmmmm.
.m1m...
.mmm...
.......
ENDMAP

NAME:  slow_altar_1
DEPTH: D:5-9
TAGS:  patrolling no_monster_gen no_item_gen transparent
TAGS:  uniq_slow_altar temple_overflow_1 temple_overflow_cheibriados
KMONS: _ = worm / mummy / iron imp
KFEAT: _ = altar_cheibriados
SUBST: x : xxxcccmnvb
MAP
xxx..@..xxx
xxx.....xxx
xxx.....xxx
...........
...........
@...._....@
...........
...........
xxx.....xxx
xxx.....xxx
xxx..@..xxx
ENDMAP

NAME:    slow_altar_2
DEPTH:   D:5-9
TAGS:    patrolling no_monster_gen no_item_gen
TAGS:    uniq_slow_altar temple_overflow_1 temple_overflow_cheibriados
KMONS:   _ = worm / mummy / iron imp
KFEAT:   _ = altar_cheibriados
SUBST:   x : xxxcccvb
MAP
x@@G@@x
x.....x
x.....x
xx+++xx
x.....x
x.....x
x.....x
x.....x
x.._..x
xxxxxxx
ENDMAP

NAME:   chei_slow_surprise
TAGS:   uniq_slow_altar overflow_altar_cheibriados transparent no_monster_gen
TAGS:   transparent
DEPTH:  D:4-9
WEIGHT: 5
KMONS:  a = worm / mummy / iron imp
NSUBST: ' = 1:a / *:.
KFEAT:  _ = altar_cheibriados
MAP
 ........
..xxxxxx..
.xx''''xx.
.x'xxxx'x.
.x'm.<x'x.
.xx+._x'x.
..xxxxx'x.
.x.....xx.
.xxxxxxx..
.........
ENDMAP

NAME:   cheibrodos_worm_habitat
TAGS:   no_item_gen no_monster_gen temple_overflow_1 transparent
TAGS:   uniq_slow_altar temple_overflow_cheibriados uniq_altar_cheibriados
DEPTH:  D:5-9
WEIGHT: 5
KFEAT:  _ = altar_cheibriados
MONS:   worm
MAP
.............
.xxxxx.xxxxx.
.xTWWxxxWWTx.
.xWWWWWWWWWx.
.xWWWxWxWWWx.
.xxWxx.xxWxx.
..xWm._.mWx..
.xxWxx1xxWxx.
.xWWWxmxWWWx.
.xWWWWWWWWWx.
.xTWWx+xWWTx.
.xxxxx.xxxxx.
......@......
ENDMAP

NAME:   kennysheep_slug_shrine
TAGS:   uniq_altar_cheibriados temple_overflow_1 temple_overflow_cheibriados
TAGS:   no_pool_fixup no_monster_gen
DEPTH:  D:2-6
MONS:   patrolling dart slug
KFEAT:  _ = altar_cheibriados
MAP
  .WWW
 .WwwwWbb
@.Ww1WW_b
 .WwwwWbb
  .WWW
ENDMAP

### Dithmenos overflow altars ################################################

NAME:   grunt_dithmenos_smoke
TAGS:   uniq_altar_dithmenos temple_overflow_1 temple_overflow_dithmenos
TAGS:   transparent decor
DEPTH:  D:2-
KFEAT:  C = altar_dithmenos
MARKER: C = lua:fog_machine { cloud_type = "black smoke", \
                              pow_min = 10, pow_max = 20, \
                              delay = 100, size = 1, walk_dist = 1 }
: interest_check(_G)
MAP
...
.C.
...
ENDMAP

# Reflect upon the darkness, mortal.
NAME:   grunt_dithmenos_smoke_and_mirrors
TAGS:   uniq_altar_dithmenos temple_overflow_1 temple_overflow_dithmenos
TAGS:   transparent decor
DEPTH:  D:2-
KFEAT:  C = altar_dithmenos
KFEAT:  O = .
MARKER: O = lua:fog_machine { cloud_type = "black smoke", \
                              pow_min = 25, pow_max = 25, \
                              delay = 30, size = 1, walk_dist = 0 }
: interest_check(_G)
MAP
  b@b
 b.O.b
b.b.b.b
@O.C.O@
b.b.b.b
 b.O.b
  b@b
ENDMAP

NAME:  grunt_dithmenos_shadows
TAGS:  uniq_altar_dithmenos temple_overflow_1 temple_overflow_dithmenos decor
DEPTH: D:4-
KFEAT: C = altar_dithmenos
{{
  if you.absdepth() >= 14 then
     mons("shadow")
  else
     local imp_weight = 9 - you.absdepth()
     if imp_weight > 0 then
         local phantom_weight = 9 - imp_weight
         mons("phantom w:" .. phantom_weight ..
              " / shadow imp w:" .. imp_weight)
     else
         mons("shadow imp")
     end
  end
}}
: interest_check(_G)
MAP
ccccc
c.C.c
c.1.c
c...c
cc+cc
ENDMAP

NAME: nicolae_dithmenos_the_darkroom
TAGS: temple_overflow_dithmenos temple_overflow_1 uniq_altar_dithmenos
TAGS: decor transparent
DEPTH: D:4-
KFEAT: _ = altar_dithmenos
MARKER: ' = lua:fog_machine { cloud_type = "black smoke", pow_min = 30, \
   pow_max = 50, delay_min = 50, delay_max = 90, size = 1, walk_dist = 1, \
   spread_rate = 10 }
: interest_check(_G)
MAP
xxxx@@@xxxx
xxx.....xxx
xx'.....'xx
x.........x
@.........@
@...._....@
@.........@
x.........x
xx'.....'xx
xxx.....xxx
xxxx@@@xxxx
ENDMAP

NAME: nicolae_dithmenos_shadow_blocks
TAGS: temple_overflow_dithmenos temple_overflow_1 uniq_altar_dithmenos
TAGS: decor transparent
DEPTH: D:2-
COLOUR: s' = magenta, c = white
TILE: c = dngn_stone_wall_white
TILE: s = dngn_stone_dark
FTILE: 's_ = floor_pebble_darkgray
KFEAT: cs = stone_wall
KFEAT: _ = altar_dithmenos
: interest_check(_G)
MAP
      .....
      ..c..
  .....ccc.....
  .cc..scs..cc.
  .ccs''s''scc.
  ..ss'''''ss..
....'''''''''....
..cs'''''''''sc..
.cccs'''_'''sccc.
..cs'''''''''sc..
....'''''''''....
  ..ss'''''ss..
  .ccs''s''scc.
  .cc..scs..cc.
  .....ccc.....
      ..c..
      .....
ENDMAP

NAME: nicolae_dithmenos_through_a_glass_darkly
TAGS: temple_overflow_dithmenos uniq_altar_dithmenos temple_overflow_1
TAGS: decor transparent
DEPTH: D:2-
COLOUR: x = magenta, m = lightmagenta
TILE: m = dngn_transparent_wall_darkgray
TILE: x = wall_brick_darkgray
KFEAT: _ = altar_dithmenos
: interest_check(_G)
MAP
  ..xxx
 .....xx
...mm..xx
..mm....x
@.m._...x
..mm....x
...mm..xx
 .....xx
  ..xxx
ENDMAP

### Elyvilon overflow altars ##################################################

NAME:   elyvilon_altar_1
TAGS:   uniq_altar_elyvilon temple_overflow_1 temple_overflow_elyvilon
TAGS:   transparent decor
DEPTH:  D:2-
KFEAT:  C = altar_elyvilon
SUBST:  X : T G t 1 2 3
MONS:   plant, bush, fungus
KMASK:  T = no_monster_gen
: interest_check(_G)
MAP
      xx@xx
      x...x
      x.X.x
      x...x
      xx.xx
       x.x
xxxxx xx.xx xxxxx
x...xxx...xxx...x
@.X.....C.....X.@
x...xxx...xxx...x
xxxxx xx.xx xxxxx
       x.x
      xx.xx
      x...x
      x.X.x
      x...x
      xx@xx
ENDMAP

NAME:   elyvilon_altar_3
TAGS:   uniq_altar_elyvilon temple_overflow_1 temple_overflow_elyvilon
TAGS:   no_pool_fixup decor
DEPTH:  D:2-
KFEAT:  C = altar_elyvilon
KMASK:  wW = no_monster_gen
: interest_check(_G)
MAP
       xxxxxxxxxxxxxxx
      xxtttttttttttttxx
      xtttttttttttttttx
      tttttttt.tttttttt
  .....ttttt.....ttttt.....
 .......ttt.......ttt.......
...wWw...t...wWw...t...wWw...
..wwWww.....wwWww.....wwWww..
@.WWtWW.....WWCWW.....WWtWW.@
..wwWww.....wwWww.....wwWww..
...wWw...t...wWw...t...wWw...
 .......ttt.......ttt.......
  .....ttttt.....ttttt.....
      tttttttt.tttttttt
      xtttttttttttttttx
      xxtttttttttttttxx
       xxxxxxxxxxxxxxx
ENDMAP

NAME:   elyvilon_altar_4
TAGS:   uniq_altar_elyvilon temple_overflow_1 temple_overflow_elyvilon
TAGS:   no_monster_gen transparent decor
DEPTH:  D:2-
KFEAT:  C = altar_elyvilon
MONS:   patrolling quokka att:good_neutral
: interest_check(_G)
MAP
xxx.@.xxx
xWW...WWx
xW..t..Wx
....1....
@.t.C.t.@
.........
xW..t..Wx
xWW...WWx
xxx.@.xxx
ENDMAP

NAME:   elyvilon_altar_5
TAGS:   uniq_altar_elyvilon temple_overflow_1 temple_overflow_elyvilon decor
DEPTH:  D:2-
KFEAT:  C = altar_elyvilon
KMASK:  T = no_monster_gen
: interest_check(_G)
MAP
.............
.c.c.c.c.c.c.
.............
...T.....T...
@.....C.....@
...T.....T...
.............
.c.c.c.c.c.c.
.............
ENDMAP

### Fedhas overflow altars ####################################################

NAME:   fedhas_altar_1
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:   transparent decor
DEPTH:  D:2-
KFEAT:  C = altar_fedhas
MONS:   plant
: interest_check(_G)
MAP
.....
.1.1.
..C..
.1.1.
.....
ENDMAP

NAME:   fedhas_altar_2
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:   transparent decor
DEPTH:  D:2-
KFEAT:  C = altar_fedhas
NSUBST: w = 2:W / *:w
SUBST:  . = ..wW
SUBST:  w = wwwP
: interest_check(_G)
MAP
.....
.www.
.wCw.
.www.
.....
ENDMAP

NAME:   fedhas_altar_3
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:   transparent decor
DEPTH:  D:2-
KFEAT:  C = altar_fedhas
NSUBST: b = 1:. / *:1
MONS:   plant w:5 / fungus / nothing w:3
: interest_check(_G)
MAP
@111@
1b1b1
11C11
1b1b1
@111@
ENDMAP

NAME:   fedhas_altar_4
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:   decor
DEPTH:  D:2-
KFEAT:  C = altar_fedhas
FTILE:  . = floor_moss
FTILE:  t = floor_moss
: interest_check(_G)
MAP
xxxxxxxxxxxxxxx
xxxtttttttxxxxx
xxtttttttttxxxx
xtttt.ttttttxxx
xtttt.C.ttttttt
xxtttt...ttttt.
xxtttttt......@
xxxxttttttttt..
xxxxxxttttttttx
xxxxxxxtttttttx
xxxxxxxxxxxxxxx
ENDMAP

# The oklob plant may be abusable (if so, remove it).
NAME:    tgw_fedhas
TAGS:    no_item_gen no_monster_gen
TAGS:    temple_overflow_1 temple_overflow_fedhas uniq_altar_fedhas
DEPTH:   Lair, D:2-
KFEAT:   _ = altar_fedhas
KPROP:   xzd3P = no_tele_into
MONS:    plant, fungus, oklob plant, bush, toadstool
KITEM:   d = fruit q:3 / fruit q:2 / fruit q:1 / nothing
KFEAT:   d = floor
SUBST:   x = TTPPPPP.
# Only make "oklob behind bushes" situation possible a bit deeper.
: if you.absdepth() > 5 then
SHUFFLE: PQR
SUBST:   Q = 114, R = 11124
: end
SUBST:   P = 112
SUBST:   z = .
SHUFFLE: ...", TU
SUBST:   T = xt, U = xx
SUBST:   " = .....5
COLOUR:  . = green / none
COLOUR:  ' = green

MAP
ccccccccccccccccccccccc
cxxxxxxxxxxxxxxxxxxxxxc
cxxxxxxxxxxxxxxPxxd3xxc
cxxxxxxxxxxxxxxPddddxxc
cxxxxxxxxxxxxxxPPPxzdxc
cxxxxxxx.......xxPPxxxc
cxxxxxx..ww.ww..xxPPxxc
cxxxxx..www.www..xxxPxc
cxxxx..wwww.wwww..xxxxc
cxxxx.wwwww.wwwww.xxxxc
cxxxx.wwww'''wwww.xxxxc
cxxxx.wwww'_'wwww.xxxxc
cxxxx.wwww'''wwww.xxxxc
cxxxx.wwwwwwwwwww.xxxxc
cxxxx..wwwwwwwww..xxxxc
cxxxxx..wwwwwww..xxxxxc
cxxxxxx..wwwww..xxxxxxc
cxxxxxxx.......xxxxxxxc
cxxxxxxxxxc.cxxxxxxxxxc
cxxxxxxxxxc.cxxxxxxxxxc
ccccccccccc@ccccccccccc
ENDMAP

NAME:  fedhas_ov_isle_minmay
TAGS:  temple_overflow_1 temple_overflow_fedhas uniq_altar_fedhas no_monster_gen
TAGS:  transparent
DEPTH: D:2-9
MONS:  plant / bush w:5
KPROP: 1_ = no_tele_into
SUBST: 1 = 111t...
KFEAT: _ = altar_fedhas
MAP
     .....
   ...www...
  ..wwwwwww..
 ..wwwwwwwww..
 .wwwwwwwwwww.
..wwww111wwww..
.wwww11111wwww.
.wwww11_11wwww.
.wwww11111wwww.
..wwww111wwww..
 .wwwwwwwwwww.
 ..wwwwwwwww..
  ..wwwwwww..
   ...www...
     .....
ENDMAP

NAME:   fedhas_altar_fruit_tree
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:   no_item_gen no_rotate no_vmirror decor
DEPTH:  D:2-
NSUBST: g = 4:f/*:.
NSUBST: f = 4:A/*:.
NSUBST: w = 2:4 / *:w
KFEAT:  C = altar_fedhas
KFEAT:  A = .
KITEM:  A = fruit q:3 / fruit q:2 / fruit q:1 / nothing
FTILE:  .tfCA = floor_moss
FTILE:  d = floor_hall
COLOUR: fd = brown
COLOUR: AC. = green
: interest_check(_G)
MAP
xxxxxxxxxxxxxxxxx
xtttttttttttttttx
xtttttttttttttttx
xttttttgfgttttttx
xtttttgf.fgtttttx
xttttgf.f.fgttttx
xtttgf..C..fgtttx
xtttgf.f.f.fgtttx
xttgfffffffffgttx
xttgt.......tgttx
xttttttdddttttttx
xttttttdddttttttx
xtttttdd@ddtttttx
ENDMAP

NAME:  fedhas_bush_and_centaur_altar
TAGS:  temple_overflow_1 temple_overflow_fedhas uniq_altar_fedhas
DEPTH: D:4-
KFEAT: _ = altar_fedhas
MONS:  centaur, bush
: interest_check(_G)
MAP
    x
 .......
 .2222..
 .21222.
x.22_22.x
 ...22..
 .222...
    x
ENDMAP

NAME:   fedhas_altar_decomposition
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:   no_item_gen no_monster_gen no_trap_gen
DEPTH:  D:6-13
MONS:   bush, plant, necrophage, zombie
KFEAT:  _ = altar_fedhas
FTILE:  '!12@ = floor_moss
COLOUR: '!@ = green
: if you.race() ~= "Mummy" and you.race() ~= "Ghoul"
:   and you.race() ~= "Vampire"
: then
MARKER:  ! = lua:message_at_spot("Fedhas urges you to decompose the vile \
                                 beasts imprisoned behind the altar.", \
                                 "god")
: end
NSUBST: 3 = 3:3 / 3 = 3 4:25 / 3 = 4 .:25 / *:.
SUBST:  ! = .
KPROP:  .3 = no_tele_into
MAP
 xxxxxxxxx
xx33...33xx
x33.222.33x
x332111233x
x3321_1233x
x3321'1233x
x3.2x'x2.3x
x3..x'x..3x
xxxxx'xxxxx
   xx!xx
   x2@2x
ENDMAP

### Gozag overflow altars #####################################################

NAME:   grunt_gozag_statues
DEPTH:  D:2-
TAGS:   transparent no_item_gen no_monster_gen no_trap_gen temple_overflow_1
TAGS:   temple_overflow_gozag uniq_altar_gozag
KFEAT:  _ = altar_gozag
TILE:   G = dngn_golden_statue
FTILE:  _-G = floor_limestone
RTILE:  x = wall_sandstone
COLOUR: xG = yellow
: set_feature_name("granite_statue", "golden statue")
: interest_check(_G)
MAP
     @
  xxx-xxx
 xx-----xx
 x-G---G-x
 x-------x
@----_----@
 x-------x
 x-G---G-x
 xx-----xx
  xxx-xxx
     @
ENDMAP

NAME:   grunt_gozag_breadcrumbs
DEPTH:  D:2-
TAGS:   transparent no_item_gen no_monster_gen no_trap_gen temple_overflow_1
TAGS:   temple_overflow_gozag uniq_altar_gozag
KFEAT:  _ = altar_gozag
ITEM:   gold q:1
KITEM:  e = gold q:1
TILE:   G = dngn_golden_statue
FTILE:  _-Ge = floor_limestone
RTILE:  x = wall_sandstone
COLOUR: xG = yellow
: set_feature_name("granite_statue", "golden statue")
: interest_check(_G)
MAP
        xxxxx
.@......x-eGx
@d.d.d.d-e-_x
.@......x-eGx
        xxxxx
ENDMAP

NAME:  nicolae_gozag_cash_rules_everything_around_me
TAGS:  temple_overflow_gozag temple_overflow_1 uniq_altar_gozag \
       no_hmirror no_vmirror no_rotate no_item_gen transparent decor
DEPTH: D:2-
KFEAT: _ = altar_gozag
: interest_check(_G)
MAP
bbb@bbb
b....$b
b.b.bbb
b.._..b
bbb.b.b
b$....b
bbb@bbb
ENDMAP

# No, you probably can't afford any of it.
# You should have thought of that before being poor.
NAME:  nicolae_gozag_zags_fifth_avenue
TAGS:  temple_overflow_gozag temple_overflow_1 uniq_altar_gozag
TAGS:  no_pool_fixup no_item_gen no_monster_gen decor transparent
DEPTH: D:2-
WEIGHT: 5
FTILE: '_TS = floor_limestone
KFEAT: _ = altar_gozag
KFEAT: S = general shop name:Gozag type:Platinum suffix:Reserve count:4 \
        greed:100 ; any weapon randart | any armour randart | any jewellery randart
: interest_check(_G)
MAP
wwwwwww....
w'''''wwww.
w'T'T''''w.
w''S'''_''@
w'T'T''''w.
w'''''wwww.
wwwwwww....
ENDMAP

NAME:  nicolae_gozag_seed_capital
TAGS:  temple_overflow_gozag temple_overflow_1 uniq_altar_gozag decor
TAGS:  transparent no_item_gen
DEPTH: D:2-
ITEM:  gold q:1 / gold q:2
KFEAT: _ = altar_gozag
: interest_check(_G)
MAP
ddd
d_d
ddd
ENDMAP

### Hepliaklqana overflow altars #############################################

NAME: worldfamousw_hep_ancestral_shrine
TAGS: uniq_overflow_hepliaklqana temple_overflow_hepliaklqana
TAGS: no_monster_gen no_item_gen no_pool_fixup
KFEAT: _ = altar_hepliaklqana
COLOUR: w = green
TILE: G = dngn_gravestone
TILE: t = DNGN_TREE_DEAD
{{
set_feature_name("granite_statue", "a gravestone")
set_feature_name("tree", "dead tree")
dgn.persist.hep_ancestral_shrine_reborn = false

local los_marker = TriggerableFunction:new {
  func="callback.hep_ancestral_shrine_los",
  repeated=true
}
los_marker:add_triggerer(DgnTriggerer:new {
  type="player_los"})

lua_marker('_', los_marker)
lua_marker("t", portal_desc { dead_tree=1 })
lua_marker("w", portal_desc { green_water=1 })
}}
MAP
 xxxxx
xxwwwxx
xwwwwwx
xwwwwwx
xwtGtwx
xt...tx
x.._..x
xt...tx
xxt.txx
 xx+xx
   @
ENDMAP

### Kikubaaqudgha overflow altars #############################################

NAME:   lemuel_zombie_altar_kikubaaqudgha
DEPTH:  D:2-, Crypt
TAGS:   no_pool_fixup uniq_zombie_altar no_monster_gen temple_overflow_1
TAGS:   temple_overflow_kikubaaqudgha
KFEAT:  _ = altar_kikubaaqudgha
MONS:   rat zombie / bat zombie / nothing w:90
: interest_check(_G)
MAP
xxxxxxxxxxxxxxxx
xxxxwwwwwwwwxxxx
xxxx11111111xxxx
@............._x
xxxx11111111xxxx
xxxxwwwwwwwwxxxx
xxxxxxxxxxxxxxxx
ENDMAP

NAME:   lemuel_mausoleum_altar_kikubaaqudgha
TAGS:   uniq_altar_kikubaaqudgha temple_overflow_1
TAGS:   temple_overflow_kikubaaqudgha uniq_mausoleum_altar
DEPTH:  D:7-, Crypt
MONS:   w:50 human zombie/orc zombie/elf zombie/w:5 ogre zombie/w:5 troll zombie
MONS:   w:50 human skeleton/orc skeleton/elf skeleton/w:5 ogre skeleton/\
        w:5 troll skeleton
MONS:   mummy, wight, wraith, necrophage
NSUBST: ? = 1:_ / *:1
SUBST:  1 = 1:25 2 3 4:8 5:7 6:5
KFEAT:  _ = altar_kikubaaqudgha
KMONS:  _ = human zombie
: if not you.in_branch("D") or you.absdepth() > 14 then
TAGS:   extra
: end
MAP
ccccccccccccccc
c?c?c?c?c?c?ccG
c+c+c+c+c+c+ccc
c............+@
c+c+c+c+c+c+ccc
c?c?c?c?c?c?ccG
ccccccccccccccc
ENDMAP

NAME:   kiku_gazebo_garden_becter
TAGS:   temple_overflow_1 temple_overflow_kikubaaqudgha transparent
DEPTH:  D:2-9
KMONS:  f = withered plant
KFEAT:  _ = altar_kikubaaqudgha
SUBST:  ` = f....
COLOUR: c = magenta
COLOUR: i' = brown
COLOUR: " = yellow
TILE:   c = dngn_stone_wall_magenta
FTILE:  '"_ = floor_pebble_yellow
MAP
..````
.ccc`````
.c'c"`````
.c''""````
.c'''"c````
.c'_''cc```
.c'''"c````
.c''""````
.c'c"`````
.ccc`````
..````
ENDMAP

NAME:   kiku_gazebo_pond_becter
TAGS:   temple_overflow_1 temple_overflow_kikubaaqudgha transparent
DEPTH:  D:2-9
KFEAT:  _ = altar_kikubaaqudgha
KMASK:  Ww = no_monster_gen
SUBST:  M = W..
COLOUR: c = magenta
COLOUR: i' = brown
COLOUR: " = yellow
COLOUR: w = green
COLOUR: W = lightgreen
TILE:   c = dngn_stone_wall_magenta
FTILE:  '"_ = floor_pebble_yellow
MAP
..........
.cccccccc.
.c''''cc...
.c'_'""..V.
.c'W""MMM..
.c'"WWWwwM.
.cc".MWwwM.
.cc..MwwwM.
.c...MwwwM.
...V..MMM..
.........
ENDMAP

NAME:   kennysheep_vampire_church
TAGS:   no_monster_gen temple_overflow_1 temple_overflow_kikubaaqudgha
DEPTH:  D:2-9
MONS:   vampire bat / nothing w:7, bat skeleton / bat zombie
KFEAT:  A = altar_kikubaaqudgha
NSUBST: . = 4:2 / 3 = 2. / *:.
{{
local trig_marker = TriggerableFunction:new {
  func="callback.vampire_church_blood",
  repeated = false
}
trig_marker:add_triggerer(DgnTriggerer:new { type = "player_move" })
lua_marker("A", trig_marker)
lua_marker("V", portal_desc { slave_name = "vampire_church_blood" })
}}
MAP
  xxxxxxxxx
  xx.V1V.xx
xxx..1A1..xxx
xx.x.VdV.x.xx
x.V.x...x.V.x
xx.x.x.x.x.xx
x.x.V.x.V.x.x
xx.x.x.x.x.xx
x.V.x.V.x.V.x
xx.x.x.x.x.xx
xxx.V.x.V.xxx
xx.x.x.x.x.xx
xx..x.V.x..xx
xx.x.x.x.x.xx
xxx.V.x.V.xxx
xxxx.....xxxx
xxxxx+++xxxxx
ENDMAP

### Makhleb overflow altars ###################################################

NAME:    demons_altar
DEPTH:   D:3-11, Orc, !Orc:$
TAGS:    no_monster_gen patrolling temple_overflow_1 temple_overflow_makhleb
TAGS:    layout_rooms layout_city layout_open
KFEAT:   _ = altar_makhleb
# Either one type 3 or 4 demon (rust devil or smoke demon) or
# three slow type 5 demons (iron imp).
# The higher demons can only come up in D:9-11.
: if you.absdepth() > 9 then
SHUFFLE: 123
NSUBST:  1 = 1:1 / *:.
NSUBST:  2 = 1:2 / *:.
: end
MONS:    rust devil, smoke demon, iron imp
MAP
xxxxxxxxxxxxxxx
x.............x
x.ll.......ll.x
x.ll..3_3..ll.x
x.ll...3...ll.x
x..ll.....ll..x
x...lll.lll...x
x....llGll....x
x......l......x
x.............x
x.............x
x.............x
x.............x
ENDMAP

NAME:  bloody_makhleb
TAGS:  uniq_altar_makhleb temple_overflow_1 temple_overflow_makhleb
TAGS:  transparent decor
DEPTH: D:2-12, Orc, Vaults
KPROP: . = bloody / nothing
KFEAT: _ = altar_makhleb
KITEM: _ = robe, whip
: interest_check(_G)
MAP
...
._.
...
ENDMAP

NAME:  makhleb_altar_promises_db
TAGS:  uniq_altar_makhleb temple_overflow_1 temple_overflow_makhleb
DEPTH: D:2-
KFEAT: _ = altar_makhleb
KPROP: 12 = no_tele_into
KMASK: 12 = no_trap_gen
MONS:  executioner / balrug / green death / cacodemon / blizzard demon
MONS:  orange demon / ynoxinul / neqoxec / hellwing / smoke demon
: interest_check(_G)
MAP
  ccc
  c1c
cccnccc
c2n_n2c
ccc.ccc
  c.c
  c@c
ENDMAP

NAME:   makhleb_blood_cavern_becter
TAGS:   uniq_altar_makhleb temple_overflow_1 temple_overflow_makhleb
DEPTH:  D:2-9
: if you.absdepth() < 6 then
: dgn.delayed_decay(_G, '1', 'human corpse')
KMONS:  2 = hound
: else
KMONS:  1 = necrophage
KMONS:  2 = hound skeleton
: end
KFEAT:  _ = altar_makhleb
KPROP:  y' = bloody
TILE:   c = wall_hall
SUBST:  ' = .
SUBST:  y = x
: interest_check(_G)
MAP
  @@@
 x..'.xxx
 xx...'yxx
 xxxx..'yxx
 xxxxxx.'yx
 xxxxxxy'.x
xxxx.'y'.xx
xcc.12'.xx
xcA_'.xxx
xcc..xxx
xxxxxx
ENDMAP

NAME:   makhleb_heckhound_becter
TAGS:   uniq_altar_makhleb temple_overflow_1 temple_overflow_makhleb
TAGS:   no_monster_gen
DEPTH:  D:2-9
KFEAT:  _ = altar_makhleb
KMONS:  _ = patrolling hound perm_ench:bleeding
TILE:   c = wall_hall
SUBST:  y = xx.
: interest_check(_G)
MAP
 xxxxx
xxcccxx
xycAcyx
x.._..x
xy...yx
 y...y
  @@@
ENDMAP

NAME:   makhleb_grotto_becter
TAGS:   no_monster_gen temple_overflow_1 temple_overflow_makhleb
DEPTH:  D:2-9
MONS:   iron imp w:1 / shadow imp w:1 / crimson imp
KFEAT:  _ = altar_makhleb
TILE:   c = wall_hall
FTILE:  A_'1 = floor_grey_dirt
SUBST:  ' = .
: interest_check(_G)
MAP
 xxxxx
xxcccxx
xwcAcwx
xww_wwx
xww1wwx
x.w'w.x
xx...xx
 xx+xx
   @
ENDMAP

### Nemelex overflow altars ###################################################

NAME:  nemelex_xobeh_ov_fountains_minmay
TAGS:  temple_overflow_1 temple_overflow_nemelex_xobeh uniq_altar_nemelex_xobeh
TAGS:  transparent decor
KFEAT: _ = altar_nemelex_xobeh
: interest_check(_G)
MAP
U@U
@_@
U@U
ENDMAP

###################################################################
# Nemelex altar (Shiori)
# Perhaps could have different parameters for the two types of clouds,
# and different patterns.
NAME:   nemelex_altar_shiori
DEPTH:  D, Depths, Elf, Vaults
TAGS:   temple_overflow_1 temple_overflow_nemelex_xobeh uniq_altar_nemelex_xobeh
TAGS:   no_pool_fixup no_monster_gen no_item_gen
TAGS:   generate_awake patrolling no_rotate
TAGS:   layout_rooms layout_city layout_open
KPROP:  abcdefghBR' = no_tele_into
KFEAT:  _ = altar_nemelex_xobeh
SUBST:  b:aa. , a:n. , d:c. , c:nn. , f:ee. , e:nn. , h:g. , g:n.
SUBST:  G:GTUVblw> , C=c
SUBST:  ':.
MARKER: R = lua:fog_machine { cloud_type="flame", walk_dist=1, size=9, \
            pow_max=20, delay=10, buildup_amnt=14, buildup_time=7, \
            spread_rate=3, start_clouds=1 }
MARKER: B = lua:fog_machine { cloud_type="foul pestilence", walk_dist=1, \
            size=9,  pow_max=20, delay=10, buildup_amnt=14, buildup_time=7, \
            spread_rate=3, start_clouds=1 }
KFEAT:  RB = floor
MAP
CCCCCCCC+++CCCCCCCC
Cnnnnnnn...nnnnnnnC
Cnab'ban...ncd'dcnC
Cnb'''bn.G.nd'''dnC
Cn''B''n...n''R''nC
Cnb'''bn...nd'''dnC
Cnab'ban...ncd'dcnC
Cnnnnnnn...nnnnnnnC
CG......._.......GC
Cnnnnnnn...nnnnnnnC
Cnef'fen...ngh'hgnC
Cnf'''fn...nh'''hnC
Cn''R''n...n''B''nC
Cnf'''fn.G.nh'''hnC
Cnef'fen...ngh'hgnC
Cnnnnnnn...nnnnnnnC
CCCCCCCC+++CCCCCCCC
ENDMAP

NAME:    nemelex_dance_club_becter
TAGS:    overflow_altar_nemelex_xobeh transparent
TAGS:    no_rotate no_vmirror no_monster_gen no_item_gen
DEPTH:   D:2-9
: if you.depth() <= 4 then
MONS:    orc ; club
: else
MONS:    ogre ; giant club
: end
MONS:    ooze
KFEAT:   _ = altar_nemelex_xobeh
SHUFFLE:  12_
COLOUR:  12' = random
TILE:    x = wall_pebble_darkgray
MAP
    .....
   ..xxx..
   .xx'xx.
 ...x'1'x...
..xxxx'xxxx..
.xx''x+x''xx.
.x'2'+.+'_'x.
.xx'xx.xx'xx.
..xxx.x.xxx..
 .....x.....
    .xxx.
    .....
ENDMAP

NAME:   nemelex_diamond_rough_becter
TAGS:   overflow_altar_nemelex_xobeh transparent
KFEAT:  _ = altar_nemelex_xobeh
COLOUR: x = lightred
COLOUR: 'b = silver
TILE:   x = wall_pebble_red
TILE:   b = dngn_crystal_white
: interest_check(_G)
: set_feature_name("crystal_wall", "wall of white crystal")
MAP
    ...
   ..x..
  ..xxx..
 ..xxbxx..
..xxb'bxx..
.xxb'_'bxx.
..xxb'bxx..
 ..x+b+x..
  ..xxx..
   ..x..
    ...
ENDMAP

NAME:   nemelex_lonely_heart_becter
TAGS:   overflow_altar_nemelex_xobeh transparent
TAGS:   no_rotate no_vmirror no_monster_gen no_item_gen
DEPTH:  D:2-9
MONS:   nothing w:4 / jessica w:1
KFEAT:  _ = altar_nemelex_xobeh
COLOUR: x = lightred
TILE:   x = wall_pebble_red
MAP
  .... ....
 ..xx...xx..
..xxxx.xxxx..
.xx..x+x..xx.
.xx.......xx.
..xx.._..xx..
 ..xx.1.xx..
  ..xx.xx..
   ..xxx..
    .....
ENDMAP

NAME:   nemelex_spade_bored_becter
TAGS:   overflow_altar_nemelex_xobeh transparent
TAGS:   no_rotate no_vmirror no_monster_gen no_item_gen
DEPTH:  D:2-9
KFEAT:  _ = altar_nemelex_xobeh
KFEAT:  o = known shaft trap
NSUBST: ' = 6:o / *:.
TILE:   x = wall_pebble_darkgray
MAP
     .....
    ..xxx..
   ..xx'xx..
  ..xx'''xx..
 ..xx''_''xx..
..xx'''''''xx..
.xx'''''''''xx.
.x'''xxxxx'''x.
.xx'+x.x.x+'xx.
..xxx..x..xxx..
 .....xxx.....
     .....
ENDMAP

### Okawaru overflow altars ###################################################

NAME:    okawaru_metal_pillars_1_2
TAGS:    temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:    transparent decor
DEPTH:   D:2-10, Orc
WEIGHT:  7
KFEAT:   _ = altar_okawaru
SHUFFLE: v'
SUBST:   ' = .
: interest_check(_G)
MAP
.....
.v'v.
.'_'.
.v'v.
.....
ENDMAP

NAME:   okawaru_metal_pillars_3
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   transparent decor
DEPTH:  D:2-10, Orc
WEIGHT: 3
KFEAT:  _ = altar_okawaru
MAP
.......
...v...
..v.v..
.v._.v.
..v.v..
...v...
.......
ENDMAP

NAME:   okawaru_trees_1
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   transparent decor
DEPTH:  D:2-10
WEIGHT: 5
KFEAT:  _ = altar_okawaru
: interest_check(_G)
MAP
.........
.v.t.t.v.
.........
.t.t.t.t.
...._....
.t.t.t.t.
.........
.v.t.t.v.
.........
ENDMAP

NAME:   okawaru_trees_2
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   transparent decor
DEPTH:  D:2-10
WEIGHT: 5
KFEAT:  _ = altar_okawaru
: interest_check(_G)
MAP
...........
.v...t...v.
....t.t....
...t.t.t...
..t.t.t.t..
.t.t._.t.t.
..t.t.t.t..
...t.t.t...
....t.t....
.v...t...v.
...........
ENDMAP

NAME:  okawaru_ov_weapons_minmay
TAGS:  temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:  transparent decor
ITEM:  hand axe, falchion, mace, spear
KFEAT: _ = altar_okawaru
: interest_check(_G)
MAP
   .....
  ...v...
 ...vvv...
...........
..v.e.f.v..
.vv.._..vv.
..v.d.g.v..
...........
 ...vvv...
  ...v...
   .....
ENDMAP

NAME:  okawaru_altar_gauntlet_db
TAGS:  uniq_altar_okawaru temple_overflow_1 temple_overflow_okawaru
DEPTH: D:2-9
KFEAT: _ = altar_okawaru
MONS:  goblin; stone q:5 / hobgoblin; stone q:5 / gnoll; stone q:5 /\
       orc; stone q:5 / kobold; stone q:5
MAP
  xxx
xxx_xxx
x1w.wxx
xxw.w1x
x1w.wxx
xxw.w1x
x1w.wxx
xxw.w1x
xxx+xxx
ENDMAP

NAME:   okawaru_gym_becter
TAGS:   uniq_altar_okawaru temple_overflow_1 temple_overflow_okawaru
TAGS:   transparent decor
DEPTH:  D:2-9
KFEAT:  _ = altar_okawaru
MAP
   .....
 .........
 .vv...vv.
..v.....v..
....._.....
..v.....v..
 .vv...vv.
 .........
   .....
ENDMAP

NAME:    okawaru_humans
TAGS:    uniq_altar_okawaru temple_overflow_1 temple_overflow_okawaru
TAGS:    no_monster_gen no_wall_fixup transparent
DEPTH:   D:7-12
COLOUR:  1 = yellow, ' = yellow, x = white
MONS:    human ; long sword . ring mail
FTILE:   1'xO = floor_sandstone
RTILE:   x = wall_tomb
KFEAT:   _ = altar_okawaru
: interest_check(_G)
MAP
.........
.xxxxxxx.
.x1'_'1x.
.x'''''x.
.x'x'x'x.
.xGx'xGx.
.xxx'xxx.
....'....
ENDMAP

NAME:   kennysheep_okawaru_gauntlet
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   no_pool_fixup
DEPTH:  D:2-9
KFEAT:  _ = altar_okawaru
KMONS:  1 = goblin ; spear
KPROP:  1 = no_tele_into
MAP
      vvvvvvv
 .....w1w...v
......www.G.v
@........G_Gv
......www.G.v
 .....w1w...v
      vvvvvvv
ENDMAP

### Qazlal overflow altars ####################################################

# There's always a safe path to the altar.
NAME:   grunt_qazlal_clouds
DEPTH:  D:2-
TAGS:   transparent no_monster_gen no_item_gen no_trap_gen temple_overflow_1
TAGS:   temple_overflow_qazlal uniq_altar_qazlal
KFEAT:  _ = altar_qazlal
MARKER:  L = lua:fog_machine { cloud_type = "flame", \
                               pow_min = 5, pow_max = 7, delay_min = 55, \
                               delay_max = 75, size = 1, walk_dist = 0, \
                               spread_rate = 0, excl_rad = 0 }
MARKER:  M = lua:fog_machine { cloud_type = "freezing vapour", \
                               pow_min = 5, pow_max = 7, delay_min = 55, \
                               delay_max = 75, size = 1, walk_dist = 0, \
                               spread_rate = 0, excl_rad = 0 }
MARKER:  N = lua:fog_machine { cloud_type = "sparse dust", \
                               pow_min = 5, pow_max = 7, delay_min = 55, \
                               delay_max = 75, size = 1, walk_dist = 0, \
                               spread_rate = 0 }
# not a storm cloud - it would be too noisy
MARKER:  O = lua:fog_machine { cloud_type = "rain", \
                               pow_min = 5, pow_max = 7, delay_min = 55, \
                               delay_max = 75, size = 1, walk_dist = 0, \
                               spread_rate = 0 }
SHUFFLE: LMNO
KPROP:   LMNO- = no_tele_into
KFEAT:   - = .
: interest_check(_G)
MAP
ccc@ccc
cL-.-Mc
c-...-c
@.._..@
c-...-c
cN-.-Oc
ccc@ccc
ENDMAP

NAME:   grunt_qazlal_sundering
DEPTH:  D:2-, !D:$
TAGS:   no_monster_gen no_item_gen no_trap_gen temple_overflow_1
TAGS:   temple_overflow_qazlal uniq_altar_qazlal
KFEAT:  _ = altar_qazlal
KPROP:  c = no_tele_into
SUBST:  c = cccl^.
SUBST:  - = ..l^
KFEAT:  ^ = known shaft trap
KITEM:  . = nothing w:189 / stone / large rock q:1 w:1
KFEAT:  . = .
: interest_check(_G)
MAP
 ----@----
-ccc-.-ccc-
-ccc-.-ccc-
-ccc-.-ccc-
-----.-----
@...._....@
-----.-----
-ccc-.-ccc-
-ccc-.-ccc-
-ccc-.-ccc-
 ----@----
ENDMAP

NAME:  nicolae_qazlal_eye_of_the_storm
TAGS:  temple_overflow_qazlal temple_overflow_1 uniq_altar_qazlal
TAGS:  no_trap_gen no_item_gen no_monster_gen
DEPTH: D:2-
KPROP: 'd = no_tele_into
KMONS: d = diamond obelisk
KFEAT: _ = altar_qazlal
: interest_check(_G)
MAP
 ccccccccccccc
 c'''''''''''c
 c'''''''''''c
 c'''''''''''c
 c'''''''''''c
@nnnnnn''''''c
@...._nd'''''c
@nnnnnn''''''c
 c'''''''''''c
 c'''''''''''c
 c'''''''''''c
 c'''''''''''c
 ccccccccccccc
ENDMAP

NAME:    nicolae_qazlal_style_of_elements
TAGS:    temple_overflow_qazlal temple_overflow_1 uniq_altar_qazlal
TAGS:    no_trap_gen no_item_gen no_monster_gen
DEPTH:   D:2-
SHUFFLE: faew
KPROP:   faew = no_tele_into
KMONS:   f = fire elemental
KMONS:   a = air elemental
KMONS:   e = earth elemental
KMONS:   w = water elemental
KFEAT:   _ = altar_qazlal
KFEAT:   f = lava
KFEAT:   w = deep_water
MARKER:  a = lua:fog_machine { cloud_type = "thin mist", \
                               pow_min = 100, pow_max = 100, delay = 1, \
                               size = 1, walk_dist = 0, start_clouds = 1 }
MARKER:  e = lua:fog_machine { cloud_type = "sparse dust", \
                               pow_min = 100, pow_max = 100, delay = 1, \
                               size = 1, walk_dist = 0, start_clouds = 1 }
: interest_check(_G)
MAP
ccc.@.ccc
cfn...nac
cnn...nnc
.........
...._....
.........
cnn...nnc
cwn...nec
ccc...ccc
ENDMAP

# general_overflow_altar cannot contain the power of Qazlal
NAME:    nicolae_qazlal_general_emergency
TAGS:    temple_overflow_qazlal temple_overflow_1 uniq_altar_qazlal
TAGS:    no_monster_gen no_pool_fixup
DEPTH:   D:2-
SHUFFLE: xXY / xXY / xXY / abc
SHUFFLE: XY
SUBST:   z = w.., X = +++w., Y = xxxxw., x = wxxx, a = w, b = w, c = w
SHUFFLE: ABCD
SUBST:   A = >, C = .GTU, D = .
KFEAT:   B = altar_qazlal
SHUFFLE: wll
: interest_check(_G)
MAP
...........z.
.z...z.zzz...
..zz.z.wwwz..
..wxXYYxwwz..
.zwwwwwwxwz..
zwwxwABwxz...
zwwxwCDwx..z.
.zzxwwwwx.z..
...xxxwxxwz..
.z...zwwwz...
...z..zzz....
...........z.
ENDMAP


# Ru overflow altar vaults ####################################################

# A few unlucky monsters permanently afflicted with Ru's various status effects.
# the monsters in group B should all be non-intelligent, so that TSO won't get upset
# about attacking them while blind. it's a pain for a monster you're not allowed
# to attack to chase you throughout the level
NAME: nicolae_ru_great_annihilating_truth
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent
TAGS: no_monster_gen no_item_gen
: interest_check(_G)
DEPTH: D:2-9
SHUFFLE: MCSBP
KFEAT: _ = altar_ru
KMONS: P = ball python perm_ench:paralysis / rat perm_ench:paralysis / \
  frilled lizard perm_ench:paralysis / giant cockroach perm_ench:paralysis / \
  quokka perm_ench:paralysis / kobold w:5 perm_ench:paralysis / \
  goblin w:5 perm_ench:paralysis / hobgoblin w:5 perm_ench:paralysis
KMONS: C = bat perm_ench:corona / adder perm_ench:corona / \
  kobold perm_ench:corona / goblin perm_ench:corona / hobgoblin perm_ench:corona
KMONS: S = jackal perm_ench:slow / bat perm_ench:slow / adder perm_ench:slow / \
  kobold perm_ench:slow / goblin perm_ench:slow / hobgoblin perm_ench:slow
KMONS: B = ball python perm_ench:blind / frilled lizard perm_ench:blind / \
  giant cockroach perm_ench:blind / bat perm_ench:blind
KMONS: M = orc wizard perm_ench:mute
MAP
@...   ...@
.+xxxxxxx+.
.x...x...x.
.x.P.x.C.x.
 x.......x
 xxx._.xxx
 x.......x
.x.S.x.B.x.
.x...x...x.
.+xxxxxxx+.
@...   ...@
ENDMAP

NAME: nicolae_ru_awakened_eye
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
TAGS: no_pool_fixup
: interest_check(_G)
DEPTH: D:2-
KFEAT: _ = altar_ru
MAP
    .......
   .ccccccc.
  .c..WWW..c.
 .c..W...W..c.
.c...W._.W...c.
 .c..W...W..c.
  .c..WWW..c.
   .ccccccc.
    .......
ENDMAP

# Overgrown and disused, since many pilgrims find Ru's sacrifices too onerous.
NAME: nicolae_ru_the_path_less_chosen
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
TAGS: no_item_gen no_monster_gen
: interest_check(_G)
DEPTH: D:2-
NSUBST: r = 3:^ / 1:^p / 7:p / 2:p. / *:., i = 1:^^p. / 2:p / *:., \
        A = . / xxp / x, B = . / xxp / x, C = xxp / .
KFEAT: _ = altar_ru
KFEAT: ^ = known web trap
KMONS: p = plant / fungus w:3
MAP
xxxxxxx
xrrrrrxxxxx
xriiirxACBx
xri_ir.A.B.@
xriiirxACBx
xrrrrrxxxxx
xxxxxxx
ENDMAP

NAME: nicolae_ru_sacrificial_ziggurat
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
: interest_check(_G)
DEPTH: D:2-
SUBST: b = B.., @ = %@@
KPROP: B% = bloody
SUBST: B = ., % = @
FTILE: ' = floor_sandstone
FTILE: .@_ = floor_limestone
TILE: c = wall_sandstone
KFEAT: _ = altar_ru
MAP
cccccc@cccccc
c'''''b'''''c
c'ccccbcccc'c
c'c'''b'''c'c
c'c'ccbcc'c'c
c'c'cBBBc'c'c
@bbbbB_Bbbbb@
c'c'cBBBc'c'c
c'c'ccbcc'c'c
c'c'''b'''c'c
c'ccccbcccc'c
c'''''b'''''c
cccccc@cccccc
ENDMAP

NAME: nicolae_ru_path_of_blood
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
TAGS: no_monster_gen
: interest_check(_G)
DEPTH: D:2-
KPROP: , = bloody
KPROP: l = no_cloud_gen
KFEAT: _ = altar_ru
MAP
@lcccccccccc
l,......,llc
@l,l,l,l,_lc
l,......,llc
@lcccccccccc
ENDMAP

NAME:   hangedman_ru_absence
TAGS:   temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
TAGS:   no_pool_fixup
DEPTH:  D:2-
WEIGHT: 5
KFEAT:  _ = altar_ru
SUBST:  X : x., x : cxx, b: cbxx, + : W+++, m : mmw
KMASK:  wW = no_monster_gen
: interest_check(_G)
MAP
......xxxxx......
..x...........x..
xxxxxx.....xxxxxx
..x..x.....x..x..
..x..x.XxX.x..x..
.....+..b..+.....
....xxbbbbbxx....
.....+..b_.+.....
..x..x.XxX.m..m..
..x..x.....m..m..
xxxxxx.....mmmmmm
..x...........m..
......xxxxx......
ENDMAP

### Sif Muna overflow altars ##################################################

NAME:   lemuel_blue_sif_altar
DEPTH:  D:2-, Elf, Vaults
TAGS:   no_monster_gen temple_overflow_1 temple_overflow_sif_muna
TAGS:   uniq_altar_sif_muna decor
COLOUR: . = blue
FTILE:  . = floor_hall, C = floor_hall, @ = floor_hall, + = floor_hall
KFEAT:  _ = altar_sif_muna
: interest_check(_G)
MAP
xxxxxxxxxxxxxx
...........xxx
@..........+_x
...........xxx
xxxxxxxxxxxxxx
ENDMAP

NAME:       tgw_sif
DEPTH:      D:3-, Elf
TAGS:       no_item_gen no_monster_gen no_pool_fixup decor
TAGS:       temple_overflow_1 temple_overflow_sif_muna uniq_altar_sif_muna
KFEAT:      _ = altar_sif_muna
MONS:       orc wizard w:15 / Jessica / Blork the orc
NSUBST:     M = 1:1 / *:"
SUBST:      ' : "'., ' = ''.
COLOUR:     . = blue
SUBST:      ' = ., " = .
: interest_check(_G)
MAP
        xx@xx
        x...x
        x...x
      xxx...xxx
     xx'''''''xx
    xx'''...'''xx
    x'''.www.'''x
   xx''.wwwww.''xx
   x''.wwM"Mww.''x
   x''.wwM>Mww.''x
   x''.wwMMMww.''x
   xx''.wwwww.''xx
    x'''.www.'''x
    xx'''...'''xx
     xx'''''''xx
      xxx...xxx
        x._.x
        x...x
        xxxxx
ENDMAP

NAME:   led_sif_book
DEPTH:  D:3-12, Orc
TAGS:   no_item_gen no_pool_fixup no_monster_gen
TAGS:   temple_overflow_1 temple_overflow_sif_muna uniq_altar_sif_muna
KPROP:  1d = no_tele_into
KFEAT:  _ = altar_sif_muna
KFEAT:  d = escape_hatch_down
KITEM:  d = randbook owner:Sif_Muna numspells:1 slevels:1
MONS:   orc wizard
COLOUR: .@+1 = blue
FTILE:  .@+1G_ = floor_marble
: interest_check(_G)
MAP
xxxxxxxxx
xbbbbx..xx
x1w..xG..x
xdw..+._.@
x1w..xG..x
xbbbbx..xx
xxxxxxxxx
ENDMAP

NAME:   led_sif_pool
DEPTH:  D:2-9
TAGS:   no_item_gen no_monster_gen no_pool_fixup
TAGS:   temple_overflow_1 temple_overflow_sif_muna uniq_altar_sif_muna
KFEAT:  _ = altar_sif_muna
COLOUR: . = blue
FTILE:  ._ = floor_marble
: interest_check(_G)
MAP
 xxx@xxx
 xxx+xxx
xxWW.WWxx
xWWW.WWWx
xWW...WWx
xWW._.WWx
xWW...WWx
xWWWWWWWx
xxWWWWWxx
 xxxxxxx
ENDMAP

### Trog overflow altars ######################################################

NAME:  bloody_trog
TAGS:  uniq_altar_trog temple_overflow_1 temple_overflow_trog
TAGS:  transparent decor
DEPTH: D:2-12, Orc, Vaults
KPROP: . = bloody / nothing
KFEAT: _ = altar_trog
KITEM: _ = animal skin, dagger
: interest_check(_G)
MAP
...
._.
...
ENDMAP

NAME:   trog_ov_bears_minmay
TAGS:   temple_overflow_1 temple_overflow_trog uniq_altar_trog
TAGS:   transparent
DEPTH:  D:6-
: if you.absdepth() < 10 then
MONS:   black bear
: else
MONS:   polar bear
: end
MONS:   bush
NSUBST: ' = 2:2 / 2=2. / *=.
KFEAT:  _ = altar_trog
MAP
.....
.'''.
.1_1.
.'''.
.....
ENDMAP

NAME:   tgw_trog
TAGS:   no_item_gen no_monster_gen patrolling
TAGS:   temple_overflow_1 temple_overflow_trog uniq_altar_trog
DEPTH:  D:2-9
KFEAT:  _ = altar_trog
KPROP:  1 = no_tele_into
MONS:   moth of wrath, rat / worm w:5
ITEM:   any weapon
NSUBST: M = 4:d / *:.
SUBST:  + = +....
KFEAT:  o = iron_grate
MAP
      xxxxxxx
     xxxMMMxxx
    xxMMM2MMMxx
   xxMM22_22MMxx
   xx.........xx
   x....ooo....x
   x...oo1oo...x
   x....ooo....x
   x...........x
   xx.........xx
    xx.......xx
     xxxx+xxxx
       xx@xx
ENDMAP

NAME:   trog_eyes_of_draining
TAGS:   uniq_altar_trog temple_overflow_1 temple_overflow_trog patrolling
DEPTH:  D:3-9
WEIGHT: 4
MONS:   eye of draining
: if you.absdepth() > 5 and crawl.coinflip() then
KMONS:  2 = ogre god:trog ; giant club ego:antimagic ident:type | w:3 giant club / \
        ogre god:trog ; giant spiked club ego:antimagic ident:type | w:5 giant spiked club / \
        orc warrior god:trog ; halberd ego:antimagic ident:type | war axe ego:antimagic ident:type | \
        flail ego:antimagic ident:type | great mace ego:antimagic ident:type | any weapon / \
        big kobold god:trog ; short sword ego:antimagic ident:type | dagger ego:antimagic ident:type | \
        rapier ego:antimagic ident:type | rapier
: else
KMONS:  2 = orc god:trog ; spear ego:antimagic ident:type | hand axe ego:antimagic ident:type | \
        war axe ego:antimagic ident:type | any weapon / \
        kobold god:trog ; short sword ego:antimagic ident:type | hand axe ego:antimagic ident:type | \
        club ego:antimagic ident:type | whip ego:antimagic ident:type | any weapon / \
        goblin god:trog ; dagger ego:antimagic ident:type | short sword ego:antimagic ident:type / \
        gnoll god:trog ; spear ego:antimagic ident:type | trident ego:antimagic ident:type | \
        halberd ego:antimagic ident:type | whip ego:antimagic ident:type | halberd | any weapon
: end
KFEAT:  _ = altar_trog
NSUBST: 1 = 1:1 / 1 = 1. / 1 = 1.. / *:.
MAP
  xxxxx
 xx111xx
xx11_11xx
x112.211x
x.......x
x.G...G.x
xx.....xx
 xx@@@xx
ENDMAP

NAME:   trog_butcher_becter
TAGS:   overflow_altar_trog
DEPTH:  D:2-9, Orc, !Orc:$
: if you.absdepth() < 6 then
MONS:   orc ; hand axe . animal skin
MONS:   leopard gecko / rat / frilled lizard / quokka
{{
  dgn.delayed_decay(_G, 'd',
                    'leopard gecko chunk q:1 / rat chunk q:1 / ' ..
                    'frilled lizard chunk q:1 / quokka chunk q:1')
}}
: else
MONS:   orc warrior ; war axe . animal skin
MONS:   iguana / worker ant
{{
  dgn.delayed_decay(_G, 'd',
                    'yak chunk q:1 / iguana chunk q:1 / ' ..
                    'worker ant chunk q:1')
}}
: end
NSUBST: ' = 3:2 / *:.
KPROP:  1y" = bloody
KFEAT:  _ = altar_trog
KFEAT:  ^ = known shaft trap
KFEAT:  m = iron_grate
SUBST:  y = x
SUBST:  " = .
MAP
  xxxxxxx
 xx'''''xx
xx.xxxxxxxx
xx+xmmmx^yx
xx.."1d""yx
xx..._"..xx
 xx.....xx
  xx...xx
     @
ENDMAP

NAME:   trog_hazing_becter
TAGS:   overflow_altar_trog no_monster_gen no_item_gen no_pool_fixup
DEPTH:  D:2-9, Orc, !Orc:$
MONS:   goblin ; stone q:5 . animal skin / \
        hobgoblin ; stone q:5 . animal skin / \
        kobold ; stone q:5 | throwing net q:1 . animal skin
ITEM:   stone
NSUBST: T = 6:1 / *:.
SUBST:  . = d....
KFEAT:  _ = altar_trog
KFEAT:  m = iron_grate
: interest_check(_G)
MAP
  xxxxx
 xxmmmxx
xx.._..xx
xTw...wTx
xTWw.wWTx
xTTw.wTTx
xxTw.wTxx
 xxx.xxx
  xx@xx
ENDMAP

NAME:   trog_three_pillars_becter
TAGS:   overflow_altar_trog transparent decor
DEPTH:  D:2-9
KFEAT:  _ = altar_trog
SUBST:  y = x..
SUBST:  z = xx.
MAP
 ..........
.......yy..
..yy..zxxy.
.yxxz.xbxy.
.yxb...xxy.
.yxx._.....
.......xy..
.....zbxy..
   ..yxxy..
   ...yy...
    ......
ENDMAP

### Uskayaw overflow altars ###################################################

NAME:   dancing_weapons_uskayaw
DEPTH:  D:2-9
TAGS:   temple_overflow_1 temple_overflow_uskayaw
MONS:   generate_awake dancing weapon ; dagger | hand axe
KFEAT:  _ = altar_uskayaw
NSUBST: ' = 2:1 / *:'
KMASK:  1' = no_monster_gen
KMASK:  1' = no_item_gen
KMASK:  1' = no_trap_gen
KPROP:  1' = no_tele_into
MAP
.......
.mmmmm.
.m'''m.
.m'''m.
.mmmmm.
.......
..._...
 .....
ENDMAP

NAME:   eat_drink_and_be_merry_uskayaw
DEPTH:  D:2-9
TAGS:   temple_overflow_1 temple_overflow_uskayaw
KFEAT:  _ = altar_uskayaw
ITEM:   any potion q:1, any weapon
ITEM:   fruit q:3 / fruit q:2 / royal jelly q:1
MAP
...........
.G.......G.
...........
.G.......G.
....def....
.G..._...G.
....ccc....
  .......
ENDMAP

### Vehumet overflow altars ###################################################

# Rather than put the flame cloud on the altar, flames now surround the
# altar, and the maximum delay between flames has gone away. Thus, standing
# on the altar properly is safe, and a cautious player can time their entrance
# to take no damage.
NAME:   fiery_altar_vehumet
DEPTH:  D:2-10, Orc, !Orc:$
WEIGHT: 8
TAGS:   temple_overflow_1 temple_overflow_vehumet
MARKER: : = lua:fog_machine { cloud_type = "flame", \
               pow_min = 6, pow_max = 8, delay_min = 55, delay_max = 75, \
               size = 2, walk_dist = 0, spread_rate= 0 }
KFEAT:  _ = altar_vehumet
: interest_check(_G)
MAP
.....
.:.:.
.._..
.:.:.
.....
ENDMAP

NAME:    vehumet_statue
DEPTH:   D:4-10
TAGS:    temple_overflow_1 temple_overflow_vehumet transparent
SHUFFLE: 12
MONS:    statue name:charred name_adjective tile:mons_statue_mage \
             hp:12 hd:3 spells:throw_flame.53.magical
MONS:    statue name:frost-covered name_adjective tile:mons_statue_mage \
             hp:12 hd:3 spells:throw_frost.53.magical
KFEAT:   _ = altar_vehumet
MAP
...........
.bbbbbbbbb.
.b.......b.
.b.1._.....
.b.......b.
.bbbbbbbbb.
...........
ENDMAP

NAME:    vehumet_crystals
DEPTH:   D:2-10, Orc, !Orc:$
TAGS:    temple_overflow_1 temple_overflow_vehumet transparent
KFEAT:   _ = altar_vehumet
: interest_check(_G)
MAP
.........
..b...b..
.bbb.bbb.
..b...b..
...._....
..b...b..
.bbb.bbb.
..b...b..
.........
ENDMAP

NAME:  vehumet_altar_wand_db
TAGS:  uniq_altar_vehumet temple_overflow_1 temple_overflow_vehumet
TAGS:  transparent patrolling
DEPTH: D:4-9
KFEAT: _ = altar_vehumet
MONS:  goblin; wand of flame /\
       hobgoblin; wand of flame /\
       kobold; wand of flame
MAP
.......
...x...
...1...
.x._.x.
.......
...x...
.......
ENDMAP

### Xom overflow altars #######################################################

NAME:   tgw_xom
DEPTH:  D:2-, Depths
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_xom
TAGS:   uniq_altar_xom
KFEAT:  _ = altar_xom
MONS:   place:D:1
MONS:   orc ; club ego:chaos | dagger ego:chaos | spear ego:chaos
MONS:   gnoll ; club ego:chaos | dagger ego:chaos | spear ego:chaos
MONS:   boggart ; flail ego:chaos | long sword ego:chaos | trident ego:chaos
MONS:   rakshasa ; flail ego:chaos | long sword ego:chaos | trident ego:chaos
:  if you.depth() == dgn.br_depth(you.branch()) then
KFEAT:  ~ = teleport trap w:20 / alarm trap w:3
:  else
KFEAT:  ~ = known shaft trap / teleport trap / alarm trap w:3
:  end
# Previously on raw average 5.17 M glyphs.
NSUBST: ' = 1:_ / *:.
NSUBST: . = 8:M / * = .:220 W:60 w:50 x:80 n:80 v b l % T U ~
NSUBST: % = 1:*% / *:%
SUBST:  M : .111123M
NSUBST: 1 = 1:0 / 1:1 / * = 01., 2 = 1:2 / 2 = 2. /  * = 2...
NSUBST: 3 = 1:3 / 2 = 3. / * = 3..., M = 1:1 / * = 123.
:  if you.in_branch("Depths") then
SUBST:  2 = 4, 3 = 5
:  end
COLOUR: . = random
MAP
   xxxxxx@xxxxxx
  xx...........xx
 xx.............xx
xx...............xx
x.................x
x.................x
x'...............'x
x'...............'x
xx'.............'xx
 xx'''''''''''''xx
  xx'''''''''''xx
   xxxxxxxxxxxxx
ENDMAP

NAME:    xom_teletrap_fun
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom
TAGS:    transparent
KFEAT:   _ = altar_xom
NSUBST:  T = . / T
KFEAT:   T = known teleport trap
MAP
.....
.TTT.
.T_T.
.TTT.
.....
ENDMAP

NAME:    xom_butterflies
TAGS:    temple_overflow_1 temple_overflow_xom transparent patrolling
KFEAT:   _ = altar_xom
KITEM:   _ = wand of random effects w:40 / any wand
COLOUR:  . = random
NSUBST:  . = 2: 1/ *: .
MONS:    butterfly
: interest_check(_G)
MAP
...
._.
...
ENDMAP

NAME:    xom_shifter_show
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom
DEPTH:   D:7-
MONS:    shapeshifter hd:1
KFEAT:   _ = altar_xom
NSUBST:  . = 2:1 / 1:> / * = _...
:  if you.depth() == dgn.br_depth(you.branch()) then
SUBST:   > = <
:  end
SUBST:   x = bmv
KMASK:   .1 = no_trap_gen
COLOUR:  .1 = random
FTILE:   ._<>1 = floor_pebble
MAP
 xxxxxxx
 x.....x
 m.....x
@m.._..x
 m.....x
 x.....x
 xxxxxxx
ENDMAP

NAME:    xom_confusion_cloud
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom
DEPTH:   D:4-13
KFEAT:   _ = altar_xom
MARKER:  _ = lua:fog_machine { cloud_type = "noxious fumes", \
               pow_min = 6, pow_max = 8, delay_min = 35, delay_max = 55, \
               size = 3, walk_dist = 0, spread_rate= 0 }
SUBST:   . = 1.
SHUFFLE: wW/l.
MONS:    random
MAP
  wwwww
 ww...ww
 w.....w
@W.._..w
 w.....w
 ww...ww
  wwwww
ENDMAP

NAME:    xom_redecorated
DEPTH:   D:2-, !D:$
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom decor
SUBST:   x = ccbbbv
NSUBST:  . = 2:T / .
SUBST:   . = lWwtm_~......
KFEAT:   _ = altar_xom
NSUBST:  T = 3:T / .
KFEAT:   T = known teleport trap
KFEAT:   ~ = shaft trap / alarm trap / teleport trap
: interest_check(_G)
MAP
      @
   xxxTxxx
  xx.....xx
 xx.......xx
 x.........x
@T...._....T@
 x.........x
 xx.......xx
  xx.....xx
   xxxTxxx
      @
ENDMAP

NAME:   led_xom_imps
DEPTH:  D:3-5
TAGS:   temple_overflow_1 temple_overflow_xom uniq_altar_xom
KFEAT:  _ = altar_xom
KFEAT:  T = known teleport trap
NSUBST: I = 1:1 / 3:2
MONS: crimson imp ; dagger ego:chaos ident:type, crimson imp ; nothing
MAP
xxxx+xxxx
xIT...TIx
xxx._.xxx
xIT...TIx
xxxx+xxxx
ENDMAP

NAME: nicolae_xom_altar_mimics
TAGS: temple_overflow_1 temple_overflow_xom uniq_altar_xom decor transparent
DEPTH: D:3-
WEIGHT: 1
NSUBST: _ = 1:_ / 2:XXX_ / *:X
KFEAT: _ = altar_xom
KFEAT: X = altar_xom mimic
: interest_check(_G)
MAP
  .......
  ._..._.
 .........
 .........
...........
._..._..._.
...........
 .........
 .........
  ._..._.
  .......
ENDMAP

NAME:    brannock_xom_greatest_gift
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom
DEPTH:   D:2-
WEIGHT:  2
KFEAT:   _ = altar_xom
MARKER:  _ = lua:portal_desc {gift="altar"}
{{
    dgn.persist.xom_gg_granted = false

    local los_marker = TriggerableFunction:new {
      func="callback.xom_greatest_gift",
      repeated=true
    }
    los_marker:add_triggerer(DgnTriggerer:new {
      type="player_los"})

    lua_marker('_', los_marker)
}}
MAP
...
._.
...
ENDMAP

NAME:   doesnt_xom_only_xom
TAGS:   temple_overflow_1 temple_overflow_xom uniq_altar_xom
KFEAT:  _ = altar_xom
KFEAT:  C = C mimic
NSUBST: C = 1:_ / *:C
MAP
xxxxxxxxxxx
x.G.G.G.G.x
xGC..C..CGx
x.........x
x.........x
xG.......Gx
x.C..C..C.x
xG.......Gx
xxxx...xxxx
   x...x
   x...x
   xG.Gx
   xx+xx
ENDMAP

### Yredelemnul overflow altars ###############################################

NAME:   yredelemnul_altar_generic
TAGS:   uniq_altar_yredelemnul temple_overflow_1 temple_overflow_yredelemnul
TAGS:   transparent decor
DEPTH:  D:2-
KFEAT:  C = altar_yredelemnul
KMONS:  f = withered plant
: interest_check(_G)
MAP
.....
.f.f.
..C..
.f.f.
.....
ENDMAP

NAME:   lemuel_zombie_altar_yredelemnul
DEPTH:  D:2-, Crypt
TAGS:   no_pool_fixup uniq_zombie_altar no_monster_gen temple_overflow_1
TAGS:   temple_overflow_yredelemnul
KFEAT:  _ = altar_yredelemnul
MONS:   patrolling gnoll zombie
NSUBST: A = 2:1 / *:.
MAP
xxxxxxxxxxxxxxxx
xxxxAAAAAAAAxxxx
xxxx........xxxx
@............._x
xxxx........xxxx
xxxxAAAAAAAAxxxx
xxxxxxxxxxxxxxxx
ENDMAP

NAME:   lemuel_mausoleum_altar_yredelemnul
TAGS:   uniq_altar_yredelemnul temple_overflow_1 temple_overflow_yredelemnul
TAGS:   uniq_mausoleum_altar decor
DEPTH:  D:7-, Crypt
MONS:   w:50 human zombie/orc zombie/elf zombie/w:5 ogre zombie/w:5 troll zombie
MONS:   w:50 human skeleton/orc skeleton/elf skeleton/w:5 ogre skeleton/\
        w:5 troll skeleton
MONS:   mummy, wight, wraith, necrophage
NSUBST: ? = 1:_ / *:1
SUBST:  1 = 1:25 2 3 4:8 5:7 6:5
KFEAT:  _ = altar_yredelemnul
KMONS:  _ = human zombie
: if not you.in_branch("D") or you.absdepth() > 13 then
TAGS:   extra
: end
MAP
ccccccccccccccc
c?c?c?c?c?c?ccG
c+c+c+c+c+c+ccc
c............+@
c+c+c+c+c+c+ccc
c?c?c?c?c?c?ccG
ccccccccccccccc
ENDMAP

NAME:   yredelemnul_forgotten_temple_becter
TAGS:   temple_overflow_1 temple_overflow_yredelemnul no_monster_gen no_item_gen
DEPTH:  D:2-9
KFEAT:  _ = altar_yredelemnul
KFEAT:  . = known web trap / .
KMONS:  _ = spectral orc
MAP
xxxxxxxxx
xcccccccx
xc.._..cx
xcc...ccx
xc.....cx
xcc...ccx
xxcc+ccxx
 xxx@xxx
ENDMAP

### Zin overflow altars #######################################################

NAME:   zin_angel
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin decor
DEPTH:  D:2-
KFEAT:  _ = altar_zin
KPROP:  1 = no_tele_into
COLOUR: G = lightgray
COLOUR: c = white
TILE:   c = wall_church
FTILE: _.G1m+ = floor_limestone
MONS:   angel god:zin dbname:zin_angel / \
        angel god:zin dbname:zin_angel ; any weapon level:20 ego:holy_wrath ident:type / \
        angel god:zin dbname:zin_angel ; long sword ego:holy_wrath ident:type / \
        angel god:zin dbname:zin_angel ; mace ego:holy_wrath ident:type
: interest_check(_G)
MAP
xxxxxxxxx
xcccccccx
xc1m.._cx
xcmm...cx
xc.....cx
xcG...Gcx
xccc+cccx
    @
ENDMAP

NAME:   zin_treasury
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
DEPTH:  D:2-9, Orc, !Orc:$
KFEAT:  _ = altar_zin
KFEAT:  m = iron_grate
KPROP:  $ = no_tele_into
COLOUR: c = white
TILE:   c = wall_church
FTILE:  _.m+$ = floor_limestone
: interest_check(_G)
MAP
  xxxxxxx
  xcccccx
 xxc$$$cxx
xxcc$$$ccxx
xccmm$mmccx
xcc.mmm.ccx
xcc.._..ccx
xxc.....cxx
 xccc+cccx
     @
ENDMAP

NAME:   zin_purify
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
TAGS:   transparent
DEPTH:  D:2-9, Orc, !Orc:$
KFEAT:  _ = altar_zin
KFEAT:  v = general shop name:Zin type:Purification suffix:Station count:1 \
        greed:30 ; \
        potion of curing
COLOUR: c = white
COLOUR: ' = white
TILE:   c = wall_church
FTILE:  Td'_ = floor_limestone
SUBST:  ' = .
: interest_check(_G)
MAP
 .....
..ccc..
.ccTcc.
..c_c..
 .....
...'...
..'v'..
 ..'..
  ...
ENDMAP

NAME:   zin_scriptorium
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
DEPTH:  D:2-9
ITEM:   any scroll
KFEAT:  _ = altar_zin
KFEAT:  m = iron_grate
KPROP:  ? = no_tele_into
COLOUR: c = white
TILE:   c = wall_church
FTILE:  _.m+d = floor_limestone
NSUBST: ? = 2:d / *:.
MAP
  xxxxxxx
  xcccccx
 xxc???cxx
 xcc???ccx
xxcccmcccxx
xcc.....ccx
xcc.._..ccx
xxc.....cxx
 xccc+cccx
     @
ENDMAP

NAME:   zin_academy
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
TAGS:   transparent
DEPTH:  D:2-9
KFEAT:  _ = altar_zin
COLOUR: c = white
COLOUR: ' = white
TILE:   c = wall_church
FTILE:  _' = floor_limestone
SUBST:  ' = .
MAP
  ccccccc
ccc.ttttccc
c.tt'_'t..c
....'''....
...........
...'''''...
 .........
   .....
ENDMAP

NAME:   zin_statuary
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
TAGS:   transparent
DEPTH:  D:2-9
KFEAT:  _ = altar_zin
COLOUR: c = white
TILE:   c = wall_church
FTILE:  _'+ = floor_limestone
SUBST:  ' = .
MAP
 .......
..ccccc..
.cc'_'cc.
..cc+cc..
...'''...
.G.....G.
 ..G.G..
  .....
ENDMAP

### The Shining One overflow altars ###########################################

# TSO's small temple (1KB)
# Idea stolen from protected_by_tso_3.
NAME:     tso_altar
TAGS:     no_item_gen no_rotate decor
TAGS:     temple_overflow_1 temple_overflow_the_shining_one
TAGS:     uniq_altar_the_shining_one
COLOUR:   _ = yellow
FTILE:    _A = floor_limestone
SUBST:    _ = .
COLOUR:   c = white
TILE:     c = wall_church
KFEAT:    A = altar_the_shining_one
: interest_check(_G)
MAP
  xxxxx
xxxcccxxx
xcccAcccx
xc.___.cx
xct._.tcx
xc.._..cx
xct...tcx
xccc+cccx
ENDMAP

NAME:    tso_metal_star
TAGS:    no_monster_gen no_trap_gen no_pool_fixup no_item_gen decor
TAGS:    temple_overflow_1 temple_overflow_the_shining_one transparent
TAGS:    uniq_altar_the_shining_one
KFEAT:   _ = altar_the_shining_one
SUBST:   ! : vmmTG..
: interest_check(_G)
MAP
          @
          .
         ...
         .v.
        ..v..
       ..vvv..
      ..vv.vv..
     ..vv...vv..
    ..vm..!..mv..
  ...vv..!.!..vv...
@..vvv..!._.!..vvv..@
  ...vv..!.!..vv...
    ..vm..!..+v..
     ..vv...vv..
      ..vv.vv..
       ..vvv..
        ..v..
         .v.
         ...
          .
          @
ENDMAP

NAME:   tso_oasis_becter
TAGS:   temple_overflow_1 temple_overflow_the_shining_one transparent
TAGS:   no_item_gen no_monster_gen
KMONS:  f = plant
SUBST:  ` = ff.
COLOUR: . = yellow
FTILE:  `.Tf = floor_sand
FTILE:  _ = floor_limestone
COLOUR: c = white
TILE:   c = wall_church
KFEAT:  _ = altar_the_shining_one
: interest_check(_G)
MAP
  ....
 ..``....
 .`ww`...
 ..``..c..
......+cc..
..T..cc_cc.
 .....ccc..
   ....c..
     ....
ENDMAP

NAME: nicolae_tso_swordbearing_angel
TAGS: temple_overflow_the_shining_one uniq_altar_the_shining_one
TAGS: temple_overflow_1 decor transparent
DEPTH: D:2-
COLOUR: . = yellow
COLOUR: c = white
FTILE: @._+ = floor_limestone
TILE: c = wall_church
KFEAT: _ = altar_the_shining_one
: interest_check(_G)
MAP
     xxxxx
    xxcccxx
    xcc.ccx
xxxxxc._.cxxxxx
xcccccc.ccccccx
xc...........cx
xcc....v....ccx
xxcc..vvv..ccxx
 xxcc..v..ccxx
  xxcc.v.ccxx
   xxc.v.cxx
    xc.v.cx
    xc.v.cx
    xc...cx
    xcc+ccx
ENDMAP


NAME: nicolae_tso_carved_into_rock
TAGS: temple_overflow_the_shining_one uniq_altar_the_shining_one
TAGS: temple_overflow_1 transparent decor
DEPTH: D:2-
SUBST: X = xxx.
COLOUR: ' = yellow
COLOUR: c = white
TILE: G = dngn_golden_statue
TILE: c = wall_church
FTILE: G'_ = floor_limestone
KFEAT: _ = altar_the_shining_one
: interest_check(_G)
MAP
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxXXXXxxxxxxxxxxxxx
xxxxxxxXXXXXX....XXXXXXxxxxxxx
xxxxXXX................XXXxxxx
xxXX......................XXxx
xX......XxX........XxX......Xx
X.....XXxxxxcG'''GcxxxXX.....X
.....Xxxxxxxccc'cccxxxxxX.....
@...Xxxxxxxxxc'''cxxxxxxxX...@
..Xxxxxxxxxxxc'_'cxxxxxxxxXX..
XXxxxxxxxxxxxc'''cxxxxxxxxxxXX
xxxxxxxxxxxxxcccccxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ENDMAP

NAME: nicolae_tso_besieged_by_evil
TAGS: temple_overflow_the_shining_one uniq_altar_the_shining_one
TAGS: temple_overflow_1 patrolling transparent no_monster_gen
DEPTH: D:4-9
SUBST: c = ccc' s:2 z:2, + = ++'
NSUBST: ' = 2:s / 2:z / 2:sz'' / *:'
COLOUR: 'sz = yellow / none w:5
COLOUR: c = white
TILE: c = wall_sandstone
FTILE: +'_sz = floor_sandstone / none w:5
KMONS: s = orc skeleton / kobold skeleton / goblin skeleton / hobgoblin zombie
KMONS: z = orc zombie / kobold zombie / goblin zombie / hobgoblin zombie
: if you.absdepth() <= 4 then
KMONS: _ = crimson imp / white imp w:5
: else
KMONS: _ = crimson imp / white imp / shadow imp / iron imp / quasit
: end
KFEAT: _ = altar_the_shining_one
MAP
.............
.............
..cccc.cccc..
..cccc+cccc..
..cc'''''cc..
..cc'''''cc..
...+''_''+...
..cc'''''cc..
..cc'''''cc..
..cccc+cccc..
..cccc.cccc..
.............
.............
ENDMAP

### Multiple god overflow altars ###############################################

# These ones are multiple overflows to specific gods;
# they get tags temple_overflow_N and temple_overflow_<god>.

NAME:    good_gods_temple_1
DEPTH:   D:2-, Depths, Lair
TAGS:    temple_overflow_3 temple_overflow_elyvilon
TAGS:    temple_overflow_zin temple_overflow_the_shining_one
TAGS:    no_monster_gen no_trap_gen uniq_good_god_temple
MONS:    plant
KFEAT:   D = altar_elyvilon
KFEAT:   E = altar_zin
KFEAT:   F = altar_the_shining_one
SHUFFLE: DEF
SUBST:   1 : GTV1
SUBST:   X : GTt
SUBST:   ? : t@
: interest_check(_G)
MAP
  ttttttt
 tt.....tt
tt...E...tt
tt.D...F.tt
tt...1...tt
 tt.....tt
  tt...tt
   ?X@X?
ENDMAP

NAME:    good_gods_mini_temple
DEPTH:   D:2-, Depths, Lair
TAGS:    temple_overflow_3 temple_overflow_elyvilon
TAGS:    temple_overflow_zin temple_overflow_the_shining_one
TAGS:    no_monster_gen no_trap_gen no_pool_fixup uniq_good_god_temple
TAGS:    no_item_gen
MONS:    plant
KFEAT:   D = altar_elyvilon
KFEAT:   E = altar_zin
KFEAT:   F = altar_the_shining_one
: if crawl.coinflip() then
SHUFFLE: x" / t1 / wT / IJ
: else
SUBST:   " : ..x
: end
SUBST:   HI : x
SUBST:   x : xcvb
SUBST:   ' : .
SHUFFLE: EG/'E
SUBST:   J : G
SHUFFLE: DEF
: interest_check(_G)
MAP
 xxxxx
xxxGxxx
xD.E.Fx
xx+++xx
 ""@""
ENDMAP

NAME:  grunt_temple_overflow_champion_of_chaos
DEPTH: D:3-9
TAGS:  temple_overflow_2 temple_overflow_makhleb temple_overflow_xom
TAGS:  no_monster_gen
MONS:  crimson imp ; dagger ego:chaos ident:type
KFEAT: A = altar_makhleb
KFEAT: B = altar_xom
MAP
xxxxx
xA.Bx
x.1.x
x...x
xx+xx
ENDMAP

NAME:  grunt_temple_overflow_growth_and_decay
DEPTH: D:2-9
TAGS:  temple_overflow_2 temple_overflow_fedhas temple_overflow_kikubaaqudgha
TAGS:  transparent
KFEAT: A = altar_fedhas
KFEAT: B = altar_kikubaaqudgha
MONS:  plant / nothing
MONS:  withered plant / nothing
MAP
xxxxx
x111xx@@
x1A111..xxx
x11.....22xxxx
xxxx11.....22x
   xxx..222B2x
      @@xx222x
         xxxxx
ENDMAP

NAME:   grunt_temple_overflow_holy_war
DEPTH:  D:2-9
TAGS:   temple_overflow_2 temple_overflow_the_shining_one
TAGS:   temple_overflow_yredelemnul transparent
MONS:   angel, profane servitor
FTILE:  A+_Kn1 = floor_limestone
FTILE:  B-;LN2 = floor_crypt
TILE:   c = wall_church
TILE:   C = wall_catacombs
KFEAT:  A = altar_the_shining_one
KFEAT:  B = altar_yredelemnul
KFEAT:  C = stone_wall
KFEAT:  KL = floor
KFEAT:  - = closed_door
KFEAT:  N = clear_stone_wall
KPROP:  12 = no_tele_into
KMASK:  12 = opaque
COLOUR: c = white
COLOUR: C = magenta
MARKER: K = lua:fog_machine {cloud_type = "blessed fire", \
                             pow_min = 10, pow_max = 10, delay = 10, \
                             size = 1, walk_dist = 0, spread_rate = 0, \
                             excl_rad = 0 }
MARKER: L = lua:fog_machine {cloud_type = "foul pestilence", \
                             pow_min = 10, pow_max = 10, delay = 10, \
                             size = 1, walk_dist = 0, spread_rate = 0, \
                             excl_rad = 0 }
MAP
xxxxxxxxxxxx@xxxxxxxxxxxx
xcccccccccc...CCCCCCCCCCx
xcnnK_K_K_c...C;L;L;LNNCx
xc1n_A____+...-;;;;B;N2Cx
xcnnK_K_K_c...C;L;L;LNNCx
xcccccccccc...CCCCCCCCCCx
xxxxxxxxxxxx@xxxxxxxxxxxx
ENDMAP

NAME:  grunt_temple_overflow_lords_of_destruction
TAGS:  temple_overflow_2 temple_overflow_makhleb temple_overflow_vehumet
DEPTH: D:3-9
KFEAT: A = altar_makhleb
KFEAT: B = altar_vehumet
MONS:  crimson imp ; wand of flame charges:1
MAP
 xxxxx
xxA.Bxx
x..1..x
xx...xx
 xx.xx
  x+x
ENDMAP

NAME:  grunt_temple_overflow_order_and_chaos_1
DEPTH: D:2-9
TAGS:  temple_overflow_2 temple_overflow_xom temple_overflow_zin transparent
KPROP: _1 = no_tele_into
KMASK: _1 = opaque
KMASK: _1 = no_trap_gen
KFEAT: A = altar_xom
KFEAT: B = altar_zin
FTILE: n_1 = floor_limestone
MONS:  angel god:zin dbname:zin_angel perm_ench:confusion generate_awake / \
       angel god:zin dbname:zin_angel perm_ench:mute generate_awake w:1 / \
       angel god:zin dbname:zin_angel perm_ench:mad generate_awake w:1 / \
       angel god:zin dbname:zin_angel perm_ench:dumb generate_awake w:1
MAP
 .......
....A....
..nnnnn..
..n___n..
@.n_1_n.@
..n___n..
..nnnnn..
....B....
 .......
ENDMAP

NAME:   grunt_temple_overflow_order_and_chaos_2
DEPTH:  D:2-9
TAGS:   temple_overflow_2 temple_overflow_makhleb temple_overflow_zin
TAGS:   transparent
KFEAT:  A = altar_makhleb
KFEAT:  B = altar_zin
MONS:   executioner / balrug / green death / cacodemon / blizzard demon
MONS:   angel god:zin dbname:zin_angel
SUBST:  ; = -_
KPROP:  - = bloody / nothing
KPROP:  12 = no_tele_into
KMASK:  12 = opaque
SUBST:  - = _L
KFEAT:  L_ = floor
KFEAT:  C = stone_wall
KFEAT:  N = clear_stone_wall
SUBST:  X = CL
FTILE:  _BN2 = floor_limestone
TILE:   C = wall_church
COLOUR: C = white
MAP
    x.@.x
  xxx...xxx
xxxXXX+CCCxxx
xccc--;__CCCx
xc1nA-;_BN2Cx
xccc--;__CCCx
xxxXXX+CCCxxx
  xxx...xxx
    x.@.x
ENDMAP

# If the berserker scares you, use the escape hatch.
NAME:   grunt_temple_overflow_bloody_war
TAGS:   temple_overflow_2 temple_overflow_okawaru temple_overflow_trog
TAGS:   patrolling
DEPTH:  D:4-9
WEIGHT: 5
KFEAT:  A = altar_okawaru
KFEAT:  B = altar_trog
KPROP:  . = bloody / nothing
: if you.absdepth() < 8 then
MONS:   gnoll ; club | spear | nothing . potion of berserk rage / \
        orc ; club | hand axe | short sword . \
              leather armour | nothing . potion of berserk rage
: else
MONS:   orc warrior ; club | hand axe | short sword . \
                      leather armour | ring mail . \
                      potion of berserk rage
: end
MAP
xxxxxxx
xxxxxxx
xxA.Bxx
xx.1.xx
xx...xx
xx...xx
xx...xx
xx...xx
xxx+xxx
  .@<
ENDMAP

NAME:    grunt_temple_overflow_magic_moments
DEPTH:   D:2-9
TAGS:    temple_overflow_3 temple_overflow_kikubaaqudgha
TAGS:    temple_overflow_sif_muna temple_overflow_vehumet
TAGS:    no_item_gen
KFEAT:   A = altar_kikubaaqudgha
KFEAT:   B = altar_sif_muna
KFEAT:   C = altar_vehumet
ITEM:    randbook owner:Kikubaaqudgha disc:necromancy spells:pain \
         numspells:1 / \
         randbook owner:Kikubaaqudgha disc:necromancy spells:animate_skeleton \
         numspells:1
# You already got a direct damage spell by looting the other gods' altars.
ITEM:    randbook owner:Sif_Muna disc:hexes numspells:1 slevels:1 / \
         randbook owner:Sif_Muna disc:charms numspells:1 slevels:1 / \
         randbook owner:Sif_Muna disc:transmutation numspells:1 slevels:1 / \
         randbook owner:Sif_Muna disc:summoning numspells:1 slevels:1 / \
         randbook owner:Sif_Muna disc:translocation numspells:1 slevels:1
ITEM:    randbook owner:Vehumet disc:conjuration spells:magic_dart numspells:1
SHUFFLE: AdB"C` / A'BeC` / A'B"Cf
MAP
     xxxxx
    xx.B.xx
  xxxG.".Gxxx
 xxGxx...xxGxx
 x...xx.xx...x
 xAd.......`Cx
 x...x.U.x...x
 xGxx...xxGxx
  xxx  @  xxx
ENDMAP

# This doesn't place multiple gods, but it can place one of two distinct
# gods.
NAME:  lightli_temple_of_fire
TAGS:  temple_overflow_1 temple_overflow_trog temple_overflow_makhleb
DEPTH: D:2-9
KPROP: Y = no_tele_into
KMASK: Y = no_monster_gen
{{
  local params = dgn.map_parameters()
  if params ~= nil then
    local tag = unpack(params)
    if tag ~= nil then
      if string.find(tag, "trog") ~= nil then
        kfeat('_ = altar_trog')
      elseif string.find(tag, "makhleb") ~= nil then
        kfeat('_ = altar_makhleb')
      else
        kfeat('_ = altar_trog / altar_makhleb')
      end
    else
      kfeat('_ = altar_trog / altar_makhleb')
    end
  else
    kfeat('_ = altar_trog / altar_makhleb')
  end
}}
MAP
llcccccc
lccYcYccc
lclllllcc
lcl...lcc
lcl...lYc
@+.._.lcc
lcl...lYc
lcl...lcc
lclllllcc
lccYcYccc
llcccccc
ENDMAP

NAME:    grunt_temple_overflow_opulence
DEPTH:   D:2-9
TAGS:    temple_overflow_2 temple_overflow_gozag temple_overflow_nemelex_xobeh
TAGS:    transparent
SHUFFLE: GU, _O
KFEAT:   _ = altar_gozag
KFEAT:   O = altar_nemelex_xobeh
TILE:    G = dngn_golden_statue
FTILE:   ._GOU+ = floor_limestone
RTILE:   x = wall_sandstone
COLOUR:  xG = yellow
: set_feature_name("granite_statue", "golden statue")
MAP
  xxxxxxx
 xx.....xx
xx...U...xx
x.........x
x.G._.O.G.x
x.........x
xx...U...xx
 xx.....xx
  xxx+xxx
ENDMAP

NAME:   grunt_temple_overflow_gold_and_silver
DEPTH:  D:2-9
TAGS:   temple_overflow_2 temple_overflow_gozag temple_overflow_zin
TAGS:   transparent
KITEM:  $ = gold q:1 / gold q:2
KFEAT:  _ = altar_gozag
KFEAT:  O = altar_zin
TILE:   G = dngn_golden_statue
COLOUR: G = yellow
TILE:   v = dngn_metal_wall_white
COLOUR: v = white
FTILE:  +._O$ = floor_limestone
: set_feature_name("granite_statue", "golden statue")
: set_feature_name("metal_wall", "silver wall")
MAP
vvvvvvvvv
v..$$$..v
v._.$.O.v
v.......v
vv.....vv
 vvv+vvv
ENDMAP

NAME:   grunt_temple_overflow_forces_of_nature
DEPTH:  D:2-9
TAGS:   temple_overflow_2 temple_overflow_fedhas temple_overflow_qazlal
TAGS:   transparent
MONS:   fungus / plant / bush
SUBST:  2 = 1.
KFEAT:  _ = altar_fedhas
KFEAT:  O = altar_qazlal
KPROP:  12Ll = no_tele_into
SUBST:  L = ll^.
SUBST:  l = cll.
KFEAT:  ^ = known shaft trap
MAP
 222.@.LLL
21112.LlllL
21_.....OlL
21112.LlllL
 222.@.LLL
ENDMAP

NAME:   kennysheep_ying_yang
DEPTH:  D
TAGS:   temple_overflow_2 temple_overflow_elyvilon temple_overflow_yredelemnul
TAGS:   no_monster_gen no_trap_gen no_pool_fixup patrolling
KFEAT:  A = altar_elyvilon
KFEAT:  B = altar_yredelemnul
KFEAT:  D = tree
KFEAT:  '"wW = floor
TILE:   D = dngn_tree_dead
FTILE:  .t1ATW = floor_grass
COLOUR: tW = white
FTILE:  'D2BVw = floor_crypt
COLOUR: Dw = black
: interest_check(_G)
MAP
       """""""
     """""ccc"""
  """""""''Dccc"""
  "ccccccD''DDccc"
 ""ctttttcD'''DDc""
 "cct....tcD'''Dcc"
 "ct.www.TtD''''Dc""
""ct.wwwA.tD''''Dcc"
"cct.www.TtD'''''Dc"
"ct......tcD'''''Dc"
"ct.....tccD'''''Dc"
"ct.....tcD''''''Dc"
"ct.....tDV'WWW'DDc"
"cct....tD'BWWW'Dcc"
""ct....tDV'WWW'Dc""
 "cct...tcD''''Dcc"
 ""ctt...tcDDDDDc""
  "ccctt..tcccccc"
  """ccct.."""""""
    """ccc"""""
      """""""
ENDMAP

NAME:    palyth_temple_overflow_mages
DEPTH:   D:6-9
TAGS:    temple_overflow_3 temple_overflow_sif_muna
TAGS:    temple_overflow_kikubaaqudgha temple_overflow_vehumet
TAGS:    no_item_gen no_monster_gen patrolling
# 3/5 chance for one altar to have a low-level randbook and extra orc wizards.
KMONS:   xyzXYZ~ = orc wizard
KFEAT:   xX = altar_sif_muna
KFEAT:   yY = altar_kikubaaqudgha
KFEAT:   zZ = altar_vehumet
KITEM:   X = randbook owner:Sif_Muna disc:summoning numspells:1 slevels:1
KITEM:   Y = randbook owner:Kikubaaqudgha disc:necromancy numspells:1 slevels:1
KITEM:   Z = randbook owner:Vehumet disc:conjuration numspells:1 slevels:1
SHUFFLE: x'y"z` / x'y"z` / X~y"z` / x'Y~z` / x'y"Z~
SUBST:   '"` = ., ~ = ~.
MAP
ccccccccccccc
c'x'c"y"c`z`c
c'''c"""c```c
cc+ccc+ccc+cc
c...........c
c....T.T....c
cc....T....cc
 cc..T.T..cc
  cc.....cc
   ccc@ccc
ENDMAP

# Xom seems to not think much of Hepliaklqana's ancestral focus,
# and mocks the species roots of incoming pilgrims.
# This will probably go over most players' heads, but it's neat anyway -- PF
NAME:    regret_index_temple_of_mockery
TAGS:    temple_overflow_2 temple_overflow_xom temple_overflow_hepliaklqana
DEPTH:   D:2-9
: species_mock(_G)
KMONS:   2 = spectral ugly thing
KFEAT:   A = altar_xom
KFEAT:   B = altar_hepliaklqana
SHUFFLE: AB
SUBST:   G = G...
KPROP:   12' = no_tele_into
KMASK:   12' = no_item_gen
KMASK:   12' = no_trap_gen
KMASK:   ' = no_monster_gen
MARKER:  2 = lua:fog_machine { cloud_type = "thin mist", \
             pow_min = 100, pow_max = 100, delay = 1, \
             size = 1, walk_dist = 0, start_clouds = 1 }
MAP
cccccc
ccb'bccccc
cb2n1bc.+.
c'nnnnc.c.
cb1nA...cc
ccbn.G.bc
cccc..Bcc
 c...bcc
 c+cccc
 c..c
ENDMAP

### Variable overflow altars ##################################################

# To make an overflow temple for N altars, give it the tag
# "temple_overflow_generic_N".

# The boring standard.
# B places the altar to a guaranteed god.
NAME:   overflow_temple_1_default
TAGS:   temple_overflow_generic_1 allow_dup transparent
MAP
B
ENDMAP

# General overflow vault, can be used for all gods.
NAME:     general_overflow_altar
DEPTH:    D:2-
WEIGHT:   10
TAGS:     no_monster_gen no_pool_fixup temple_overflow_generic_1
TAGS:     transparent
SHUFFLE:  xXY / xXY / xXY / abc
SHUFFLE:  XY
SUBST:    X=+, Y=x, a=w, b=w, c=w
SHUFFLE:  ABCD
SUBST:    A=>, C=.GTU, D=.
SHUFFLE:  wll
: interest_check(_G)
MAP
........
.xXYYxx.
.xwwwwx.
.xwABwx.
.xwCDwx.
.xwwwwx.
.xxxxxx.
........
ENDMAP

NAME:    old_standard_altar
DEPTH:   D, Depths
TAGS:    transparent allow_dup decor temple_overflow_generic_1
SHUFFLE: cvxxxx
: altar_check(_G)
MAP
...........
.xxxx.xxxx.
.xx.....xx.
.x.......x.
.x.......x.
.....C.....
.x.......x.
.x.......x.
.xx.....xx.
.xxxx.xxxx.
...........
ENDMAP

NAME:    lemuel_round_altar
DEPTH:   D, Depths
TAGS:    allow_dup transparent decor temple_overflow_generic_1
SUBST:   X:x@
SHUFFLE: cvxx
: altar_check(_G)
MAP
   xxXxx
  xx...xx
 xx.....xx
 x.......x
 X...C...@
 x.......x
 xx.....xx
  xx...xx
   xxXxx
ENDMAP

NAME:  lemuel_crystal_altar
DEPTH: D, Depths
TAGS:  transparent allow_dup decor temple_overflow_generic_1
: altar_check(_G)
MAP
b@b
@C@
b@b
ENDMAP

NAME:    lemuel_doored_altar
TAGS:    transparent decor temple_overflow_generic_1
DEPTH:   D:1-, Vaults, Lair, Elf, Crypt
SHUFFLE: XY
SUBST:   X = .
SUBST:   Y = +
: altar_check(_G)
MAP
.........
.xxxmxxx.
.xxxmxxx.
.xxxmxxx.
.X.YCY.X.
.xxxYxxx.
.xxx.xxx.
.xxxXxxx.
.........
ENDMAP

NAME:   lemuel_coloured_pillars_altar
TAGS:   no_rotate decor temple_overflow_generic_1
DEPTH:  D:2-, Vaults, Elf
COLOUR: c = blue / yellow / red / cyan
: altar_check(_G)
MAP
xxxxxxxxxxxxxxxxxxxx
...................x
c...c...c...c...c..x
@.................Cx
c...c...c...c...c..x
...................x
xxxxxxxxxxxxxxxxxxxx
ENDMAP

NAME: nicolae_overflow_crystal_walls
TAGS: temple_overflow_generic_1 transparent
: interest_check(_G)
DEPTH: D:2-
SHUFFLE: ACDE, FGHI
SUBST: A : b, C : b., D : b., E : b., F : b, G : b., H : b., I : b.
MAP
AAAAA@FFFFF
ACCCC.GGGGF
ACDDD.HHHGF
ACDEE.IIHGF
ACDE...IHGF
@....B....@
FGHI...EDCA
FGHII.EEDCA
FGHHH.DDDCA
FGGGG.CCCCA
FFFFF@AAAAA
ENDMAP

NAME:    marbit_many_paths
TAGS:    temple_overflow_generic_1
: interest_check(_G)
DEPTH:   D:2-
SHUFFLE: pqr / bqr / pbr / pqb / bbr / pbb / bqb
SUBST:   pqr = .
NSUBST:  . = 1:0 / *:.
FTILE:   .C0 = FLOOR_PEBBLE_GREEN
MAP
 xxxxxxxxx
xx..qxq..xx
xpqrpqrpqrxx
@qrpqrpqrpBx
xrpqrpqrpqxx
xx..pxp..xx
 xxxxxxxxx
ENDMAP

NAME:   amethyst_overflow_temple_binary
TAGS:   temple_overflow_generic_2
SUBST:  p : .:15 c:10 g:3 n:2
SUBST:  G : G:20 T:10 U:1 .:1
SUBST:  g : t:10 T:10 .:5 w:5 U:1 l:1
SUBST:  c : c:20 x:5 v:1 b:1
SUBST:  + : +:10 .:10 A:5
KMASK:  TUw = no_monster_gen
MAP
  ccc     ccc
 ccGcccccccGcc
cc...ccgcc...cc
cB.p..+.+..p.Bc
cc...cc.cc...cc
 ccGccg.gccGcc
  ccccc+ccccc
       @
ENDMAP

NAME:   gammafunk_temple_overflow_statue
TAGS:   temple_overflow_generic_2
SUBST:  g : t:10 T:10 .:5 w:5 l:5 U:1
KMASK:  wlTU = no_monster_gen
MAP
  ccc
cccGccc
c.B.B.c
cc...cc
ccg.gcc
 cc+cc
   @
ENDMAP

NAME:   gammafunk_temple_overflow_pools
TAGS:   temple_overflow_generic_2
SUBST:  G : G:20 T:10 U:1 .:1
KMASK:  TU = no_monster_gen
MAP
 ccccc ccccc
cc.B.ccc.B.cc
c.....G.....c
c..T.....T..c
cc.........cc
 ccc.....ccc
   ccc+ccc
      @
ENDMAP

NAME:    gammafunk_temple_overflow_elements
TAGS:    temple_overflow_generic_2
SHUFFLE: lw
KMASK:   lw = no_monster_gen
MAP
 ccccccc
ccB...Bcc
cclc+cwcc
 ccc@ccc
ENDMAP

NAME:    gammafunk_temple_overflow_wave
TAGS:    temple_overflow_generic_2
SUBST:   p = G:20 c:20 1 w:5 l:5
MONS:    plant / bush
KMASK:   Twl = no_monster_gen
MAP
   ccccc
 cccpcc
ccTB.+@
ccTB.+@
 cccpcc
   ccccc
ENDMAP

NAME: minmay_overflow_temple_star_quad
TAGS: temple_overflow_generic_3
MAP
           c
           c
          ccc
          cBc
         cc.cc
         c...c
        cc...cc
        c.....c
      ccc.....ccc
    ccc....G....ccc
  ccc......c......ccc
cccB.....GcccG.....Bccc
  ccc......c......ccc
    ccc....G....ccc
      ccc.....ccc
        c.....c
        cc...cc
         c...c
         cc.cc
          c.c
          c+c
           @
ENDMAP

NAME:   gammafunk_temple_overflow_forgotten
TAGS:   temple_overflow_generic_3
SUBST:  p = x:50 . 1, T = V:30 T, + = +:20 .
NSUBST: _ = 3:1 / *:_
MONS:   plant / bush
KMASK:  T = no_monster_gen
TILE:   x = wall_brick_brown_vines
FTILE:  _+T12B = floor_pebble_yellow
MAP
 ppppppp
pxB_B_Bxp
p_______p
p___T___p
px_____xp
 xxx+xxx
    @
ENDMAP

NAME:   grunt_temple_overflow_diamond
TAGS:   temple_overflow_generic_3
SUBST:  T = T G V:1 U:1 t:1
MAP
      c
     ccc
    ccBcc
   cc...cc
  cccc+cccc
 cc.c...c.cc
ccB.+.T.+.Bcc
 cc.c...c.cc
  cccc+cccc
   cc...cc
    cc.cc
     c.c
      @
ENDMAP

NAME:   gammafunk_temple_overflow_claw
TAGS:   temple_overflow_generic_3
SUBST:  l : lw
KMASK:  lw = no_monster_gen
MAP
  ...........
 ..cc..c..cc..
..cc..ccc..cc..
.ccc..ccc..ccc.
.ccc.ccccc.ccc.
.ccccccGcccccc.
.ccGB..B..BGcc.
..ccl.....lcc..
..ccll...llcc..
 ..ccll.llcc..
  ..ccl.lcc..
   ..cc+cc..
    ...@...
ENDMAP

NAME:   grunt_temple_overflow_cloverleaf
TAGS:   temple_overflow_generic_4 transparent
SUBST:  T : T U:1 V:1
MAP
 ccccc.@.ccccc
cc...cc.cc...cc
c.G.G.c.c.G.G.c
c..B..c.c..B..c
c.G...c.c...G.c
cc...+c.c+...cc
.ccccc...ccccc.
@......T......@
.ccccc...ccccc.
cc...+c.c+...cc
c.G...c.c...G.c
c..B..c.c..B..c
c.G.G.c.c.G.G.c
cc...cc.cc...cc
 ccccc.@.ccccc
ENDMAP

NAME: nicolae_overflow_quartered_altars
TAGS: temple_overflow_generic_4
SHUFFLE: fgh/ijk, pq/rs
SUBST: pqi = ., rk = c, s = +, z : cm, j : GTt
CLEAR: fgh
MAP
  ffghgff
 @.ccccc.@
f.qp.c.pq.f
fcp..z..pcf
gc..BcB..cg
hcczccczcch
gc..BcB..cg
fcp..z..pcf
f.qp.c.pq.f
 @.ccccc.@
  ffghgff
ENDMAP

NAME:   minmay_overflow_temple_star_hex
TAGS:   temple_overflow_generic_5
KMASK:  T = no_monster_gen
MAP
          ccc
         ccBcc
        cc...cc
       cc.....cc
cccccccc...G...cccccccc
cB...................Bc
ccc......G...G......ccc
  ccc.............ccc
    ccc....T....ccc
  ccc.............ccc
ccc......G...G......ccc
cB...................Bc
cccccccc...G...cccccccc
       cc.....cc
        cc...cc
         cc.cc
          c+c
          ...
          .@.
ENDMAP

NAME:   minmay_overflow_temple_hex
TAGS:   temple_overflow_generic_6
MAP
   cccccccccc
   cB......Bc
  cc........cc
  c...c..c...c
 cc..........cc
 c...c....c...c
cc............cc
cB..c......c..Bc
cc............cc
 c...c....c...c
 cc..........cc
  c...c..c...c
  cc........cc
   cB......Bc
   cccc++cccc
      ....
      ....
      .@@.
ENDMAP

NAME:  grunt_temple_overflow_octagram
TAGS:  temple_overflow_generic_7
SUBST: T : T G t V:1
MAP
          c
         ccc
        ccBcc
   cccccc...cccccc
   cB..ccc+ccc..Bc
   c..cc.....cc..c
   c.c+.......+c.c
   ccc....T....ccc
  ccc...T...T...ccc
 cc.c...........c.cc
ccB.+..T..T..T..+.Bcc
 cc.c...........c.cc
  ccc...T...T...ccc
   ccc....T....ccc
   c.c+.......+c.c
   c..cc.....cc..c
   cB..ccc+ccc..Bc
   cccccc...cccccc
        cc.cc
         c.c
          @
ENDMAP

NAME:    grunt_temple_overflow_open
TAGS:    temple_overflow_generic_8 temple_overflow_generic_7
TAGS:    temple_overflow_generic_6 temple_overflow_generic_5
TAGS:    temple_overflow_generic_4 temple_overflow_generic_3
TAGS:    temple_overflow_generic_2
TAGS:    transparent
SHUFFLE: defghijk / efghijkd
{{
  local altarcount = 1
  if is_validating() then
    altarcount = 8
  else
    altarcount = get_overflow_altar_count(_G)
  end
  if altarcount == "1" then
    subst("d = B")
    subst("efghijk = .")
  elseif altarcount == "2" then
    subst("dh = B")
    subst("efgijk = .")
  elseif altarcount == "3" then
    subst("dgi = B")
    subst("efhjk = .")
  elseif altarcount == "4" then
    subst("dfhj = B")
    subst("egik = .")
  elseif altarcount == "5" then
    subst("dfgij = B")
    subst("ehk = .")
  elseif altarcount == "6" then
    subst("defhij = B")
    subst("gk = .")
  elseif altarcount == "7" then
    subst("defghij = B")
    subst("k = .")
  else
    subst("defghijk = B")
  end
}}
SUBST: G = G T V:1 U:1 t:1
MAP
   ...
 ...d...
 .k...e.
.........
.j..G..f.
.........
 .i...g.
 ...h...
   ...
ENDMAP

# Formerly minivault_3; resurrected after being removed way back in late 2009.
NAME:  minitemple
TAGS:  temple_overflow_generic_14 temple_overflow_generic_13
TAGS:  temple_overflow_generic_12 temple_overflow_generic_11
TAGS:  temple_overflow_generic_10 temple_overflow_generic_9
TAGS:  temple_overflow_generic_8 temple_overflow_generic_7
TAGS:  temple_overflow_generic_6 temple_overflow_generic_5
TAGS:  temple_overflow_generic_4 temple_overflow_generic_3
TAGS:  temple_overflow_generic_2
# The original vault had allow_dup; I think that's overkill.
{{
  local altarcount = 1
  if is_validating() then
    altarcount = 14
  else
    altarcount = get_overflow_altar_count(_G)
  end
  nsubst("B : " .. altarcount .. ":B / *:x")
}}
SUBST: x = .:50 c:50 G T t:1 V:1 U:1
MAP
cccccccccccc
cBcBcBcBcBcc
G.c.c.c.c.Bc
@.........Bc
@.........Bc
G.c.c.c.c.Bc
cBcBcBcBcBcc
cccccccccccc
ENDMAP

NAME: nicolae_overflow_hidden_temple
TAGS: temple_overflow_generic_5 temple_overflow_generic_4 temple_overflow_generic_3 \
      temple_overflow_generic_2 temple_overflow_generic_1 no_monster_gen
{{
  local altarcount = 1
  if is_validating() then
    altarcount = 5
  else
    altarcount = get_overflow_altar_count(_G)
  end
  if altarcount == "1" then
    subst("c = B")
    subst("abde = G")
  elseif altarcount == "2" then
    subst("bd = B")
    subst("ace = G")
  elseif altarcount == "3" then
    shuffle("ae/bd")
    subst("cbd = B")
    subst("ae = G")
  elseif altarcount == "4" then
    subst("abde = B")
    subst("c = G")
  else
    subst("abcde = B")
  end
}}
SUBST: } = })]
MAP
 xxxxxxxxxxxxx
 xxxxaxxxbxxxx
 xxG...G...Gxx
 mm.........mm
@m}.........cm@
 mm.........mm
 xxG...G...Gxx
 xxxxexxxdxxxx
 xxxxxxxxxxxxx
ENDMAP

NAME:   chequers_temple_overflow_statue_of_worship
TAGS:   temple_overflow_generic_2 ttemple_overflow_generic_3
TAGS:   temple_overflow_generic_4
{{
  local altarcount = get_overflow_altar_count(_G)
  if altarcount == nil then
    altarcount = "2"
  end
  if altarcount == "2" then
    subst("C = .")
  else
    subst("C = B")
  end
  nsubst("B = " .. altarcount .. ":B / *:.")
}}
MAP
.....
..C..
.BGB.
..C..
.....
ENDMAP

NAME:  chequers_temple_overflow_minitemple
TAGS:  temple_overflow_generic_5 temple_overflow_generic_4
TAGS:  temple_overflow_generic_3
{{
  local altarcount = 5
  if not is_validating() then
    altarcount = get_overflow_altar_count(_G)
  end
  nsubst("O = " .. altarcount .. ":B / *:l")
}}
KFEAT: l = altar_ecumenical
MAP
        @
       c+c
   ccccc.ccccc
  cc.........cc
ccc..ccccccc..ccc
cO..cccO.Occc..Oc
ccc..cc...cc..ccc
  cc.........cc
   cccc...cccc
      ccOcc
       ccc
ENDMAP
